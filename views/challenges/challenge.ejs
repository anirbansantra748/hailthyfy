<% layout('/layouts/boilerplate') %>

<div class="challenge-detail-page" id="challengePage">
    <!-- Loading State -->
    <div class="loading-container text-center py-5" id="loadingContainer">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading challenge...</span>
        </div>
        <p class="text-muted mt-3">Loading challenge details...</p>
    </div>

    <!-- Challenge Content -->
    <div class="challenge-content d-none" id="challengeContent">
        <!-- Hero Section -->
        <div class="hero-section bg-gradient-primary text-white py-5 mb-4">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-lg-8">
                        <nav aria-label="breadcrumb" class="mb-3">
                            <ol class="breadcrumb bg-transparent p-0">
                                <li class="breadcrumb-item"><a href="/challenges" class="text-white-50">Challenges</a></li>
                                <li class="breadcrumb-item active text-white" aria-current="page">Challenge Details</li>
                            </ol>
                        </nav>
                        <h1 class="display-5 font-weight-bold mb-3" id="challengeTitle">
                            <i class="fas fa-target me-3"></i>Challenge Title
                        </h1>
                        <p class="lead mb-4" id="challengeDescription">Challenge description will appear here...</p>
                        
                        <div class="challenge-badges mb-4" id="challengeBadges">
                            <!-- Badges will be populated here -->
                        </div>

                        <!-- Action Buttons -->
                        <div class="action-buttons d-flex flex-wrap gap-3" id="actionButtons">
                            <!-- Buttons will be populated based on user state -->
                        </div>
                    </div>
                    <div class="col-lg-4 text-center">
                        <div class="challenge-stats">
                            <div class="stats-circle bg-white text-primary p-4 rounded-circle d-inline-block">
                                <i class="fas fa-users fa-3x mb-2"></i>
                                <div class="stat-number h4 font-weight-bold mb-0" id="participantCount">0</div>
                                <small class="text-muted">Participants</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <div class="row">
                <!-- Main Content -->
                <div class="col-lg-8 mb-4">
                    <!-- Challenge Overview -->
                    <div class="card content-card fade-in-up mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-info-circle me-2"></i>Challenge Overview
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-4">
                                <div class="col-md-6">
                                    <div class="stat-item">
                                        <div class="stat-icon">üéØ</div>
                                        <div class="stat-content">
                                            <div class="stat-label">Target Goal</div>
                                            <div class="stat-value" id="targetGoal">Loading...</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="stat-item">
                                        <div class="stat-icon">‚è±Ô∏è</div>
                                        <div class="stat-content">
                                            <div class="stat-label">Duration</div>
                                            <div class="stat-value" id="duration">Loading...</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="stat-item">
                                        <div class="stat-icon">üèÜ</div>
                                        <div class="stat-content">
                                            <div class="stat-label">Reward Points</div>
                                            <div class="stat-value" id="rewardPoints">Loading...</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="stat-item">
                                        <div class="stat-icon">üìà</div>
                                        <div class="stat-content">
                                            <div class="stat-label">Success Rate</div>
                                            <div class="stat-value" id="successRate">Loading...</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Instructions -->
                    <div class="card content-card fade-in-up mb-4" id="instructionsCard" style="display: none;">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-list-ol me-2"></i>Instructions
                            </h5>
                        </div>
                        <div class="card-body">
                            <div id="instructionsContent"></div>
                        </div>
                    </div>

                    <!-- Tips -->
                    <div class="card content-card fade-in-up mb-4" id="tipsCard" style="display: none;">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-lightbulb me-2"></i>Helpful Tips
                            </h5>
                        </div>
                        <div class="card-body">
                            <div id="tipsContent"></div>
                        </div>
                    </div>

                    <!-- Progress Tracking (if user is participating) -->
                    <div class="card content-card fade-in-up mb-4" id="progressCard" style="display: none;">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-chart-line me-2"></i>Your Progress
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="progress-section">
                                <div class="progress-bar-container mb-3">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <span class="progress-label">Progress</span>
                                        <span class="progress-percentage" id="progressPercentage">0%</span>
                                    </div>
                                    <div class="progress" style="height: 20px;">
                                        <div class="progress-bar bg-success" role="progressbar" style="width: 0%" id="progressBar"></div>
                                    </div>
                                </div>
                                
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <div class="progress-stat">
                                            <div class="progress-stat-value" id="currentProgress">0</div>
                                            <div class="progress-stat-label">Current</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="progress-stat">
                                            <div class="progress-stat-value" id="targetProgress">0</div>
                                            <div class="progress-stat-label">Target</div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Update Progress Form -->
                                <div class="update-progress-section mt-4">
                                    <h6>Update Your Progress</h6>
                                    <form id="updateProgressForm">
                                        <div class="row g-3">
                                            <div class="col-md-6">
                                                <label for="progressValue" class="form-label">Progress Value</label>
                                                <input type="number" class="form-control" id="progressValue" name="value" 
                                                       placeholder="Enter your progress" min="0" required>
                                            </div>
                                            <div class="col-md-6">
                                                <label for="progressNotes" class="form-label">Notes (Optional)</label>
                                                <input type="text" class="form-control" id="progressNotes" name="notes" 
                                                       placeholder="How do you feel?">
                                            </div>
                                        </div>
                                        <button type="submit" class="btn btn-primary mt-3">
                                            <i class="fas fa-save me-2"></i>Update Progress
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Sidebar -->
                <div class="col-lg-4">
                    <!-- Quick Actions -->
                    <div class="card sidebar-card action-card fade-in-up mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-bolt me-2"></i>Quick Actions
                            </h5>
                        </div>
                        <div class="card-body text-center">
                            <div id="sidebarActions">
                                <!-- Actions will be populated here -->
                            </div>
                        </div>
                    </div>

                    <!-- Challenge Creator -->
                    <div class="card sidebar-card creator-card fade-in-up mb-4">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-user me-2"></i>Challenge Creator
                            </h5>
                        </div>
                        <div class="card-body text-center">
                            <div class="creator-avatar mb-3">
                                <div class="avatar-placeholder bg-primary rounded-circle mx-auto d-flex align-items-center justify-content-center text-white">
                                    <i class="fas fa-user fa-2x"></i>
                                </div>
                            </div>
                            <h6 class="creator-name mb-0" id="creatorName">Loading...</h6>
                            <small class="text-muted" id="creatorEmail">creator@example.com</small>
                        </div>
                    </div>

                    <!-- Participants Preview -->
                    <div class="card sidebar-card participants-card fade-in-up">
                        <div class="card-header">
                            <h5 class="mb-0">
                                <i class="fas fa-users me-2"></i>Recent Participants
                            </h5>
                        </div>
                        <div class="card-body">
                            <div id="participantsList">
                                <p class="text-muted">Loading participants...</p>
                            </div>
                            <div class="text-center mt-3">
                                <button class="btn btn-outline-primary btn-sm" id="viewAllParticipants">
                                    View All Participants
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Error State -->
    <div class="error-container text-center py-5 d-none" id="errorContainer">
        <i class="fas fa-exclamation-triangle fa-3x text-warning mb-3"></i>
        <h4 class="text-muted">Challenge Not Found</h4>
        <p class="text-muted mb-3">The challenge you're looking for doesn't exist or has been removed.</p>
        <a href="/challenges" class="btn btn-primary">
            <i class="fas fa-arrow-left me-2"></i>Back to Challenges
        </a>
    </div>
</div>

<!-- Modals -->
<!-- Join Challenge Modal -->
<div class="modal fade" id="joinChallengeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Join Challenge</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you ready to start this challenge and commit to reaching your goal?</p>
                <div class="challenge-summary">
                    <div class="d-flex align-items-center mb-2">
                        <i class="fas fa-target text-primary me-2"></i>
                        <span><strong>Goal:</strong> <span id="modalGoal"></span></span>
                    </div>
                    <div class="d-flex align-items-center mb-2">
                        <i class="fas fa-calendar text-primary me-2"></i>
                        <span><strong>Duration:</strong> <span id="modalDuration"></span></span>
                    </div>
                    <div class="d-flex align-items-center">
                        <i class="fas fa-trophy text-primary me-2"></i>
                        <span><strong>Reward:</strong> <span id="modalReward"></span> points</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="confirmJoinBtn">
                    <i class="fas fa-check me-2"></i>Join Challenge
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Custom Styles -->
<style>
/* ======= GREEN MEDICAL THEME STYLING ======= */

/* Background and Base */
body {
    background: linear-gradient(135deg, #f0fff4 0%, #e8f5e8 100%);
}

.bg-gradient-primary {
    background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
}

/* Content Cards */
.content-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    border: none;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    margin-bottom: 2rem;
    overflow: hidden;
}

.content-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.12);
}

.content-card .card-header {
    background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
    color: white;
    border: none;
    padding: 1.5rem;
    font-weight: 600;
}

/* Sidebar Cards */
.sidebar-card {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    border: none;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
    margin-bottom: 2rem;
}

.sidebar-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.12);
}

.sidebar-card.action-card .card-header {
    background: linear-gradient(135deg, #22c55e, #16a34a);
    color: white;
}

.sidebar-card.creator-card .card-header {
    background: linear-gradient(135deg, #3b82f6, #1d4ed8);
    color: white;
}

.sidebar-card.participants-card .card-header {
    background: linear-gradient(135deg, #8b5cf6, #7c3aed);
    color: white;
}

/* Stat Items */
.stat-item {
    display: flex;
    align-items: center;
    padding: 1.5rem;
    background: rgba(34, 197, 94, 0.05);
    border-radius: 15px;
    border: 2px solid rgba(34, 197, 94, 0.1);
    transition: all 0.3s ease;
}

.stat-item:hover {
    background: rgba(34, 197, 94, 0.1);
    border-color: rgba(34, 197, 94, 0.2);
    transform: translateY(-2px);
}

.stat-icon {
    font-size: 2rem;
    margin-right: 1rem;
    flex-shrink: 0;
}

.stat-content {
    flex-grow: 1;
}

.stat-label {
    font-size: 0.875rem;
    color: #6b7280;
    font-weight: 500;
    margin-bottom: 0.25rem;
}

.stat-value {
    font-size: 1.25rem;
    font-weight: 700;
    color: #16a34a;
}

/* Progress Section */
.progress-bar-container .progress {
    border-radius: 15px;
    background-color: rgba(34, 197, 94, 0.1);
}

.progress-bar {
    background: linear-gradient(135deg, #22c55e, #16a34a) !important;
    border-radius: 15px;
}

.progress-stat {
    text-align: center;
    padding: 1rem;
    background: rgba(34, 197, 94, 0.05);
    border-radius: 12px;
}

.progress-stat-value {
    font-size: 1.5rem;
    font-weight: 700;
    color: #16a34a;
    margin-bottom: 0.25rem;
}

.progress-stat-label {
    font-size: 0.875rem;
    color: #6b7280;
    font-weight: 500;
}

/* Hero Section */
.hero-section {
    position: relative;
    overflow: hidden;
}

.hero-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>') repeat;
    opacity: 0.3;
}

.stats-circle {
    width: 160px;
    height: 160px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border: 3px solid #22c55e;
    background: white;
    box-shadow: 0 10px 30px rgba(34, 197, 94, 0.15);
}

/* Badges */
.badge {
    padding: 0.5rem 1rem;
    border-radius: 25px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin: 0.25rem;
}

.badge.bg-primary {
    background: linear-gradient(135deg, #22c55e, #16a34a) !important;
}

.badge.bg-warning {
    background: linear-gradient(135deg, #eab308, #ca8a04) !important;
    color: white !important;
}

.badge.bg-danger {
    background: linear-gradient(135deg, #dc2626, #b91c1c) !important;
}

/* Buttons */
.btn {
    border-radius: 12px;
    font-weight: 600;
    padding: 0.75rem 1.5rem;
    transition: all 0.3s ease;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.btn-primary {
    background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
    border: none;
    box-shadow: 0 4px 15px rgba(34, 197, 94, 0.4);
}

.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(34, 197, 94, 0.5);
}

.btn-success {
    background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
    border: none;
    box-shadow: 0 4px 15px rgba(34, 197, 94, 0.4);
}

.btn-success:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(34, 197, 94, 0.5);
}

.btn-outline-primary {
    border: 2px solid #22c55e;
    color: #22c55e;
    background: transparent;
}

.btn-outline-primary:hover {
    background: #22c55e;
    border-color: #22c55e;
    transform: translateY(-2px);
}

.btn-danger {
    background: linear-gradient(135deg, #dc2626, #b91c1c);
    border: none;
    box-shadow: 0 4px 15px rgba(220, 38, 38, 0.4);
}

.btn-danger:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(220, 38, 38, 0.5);
}

/* Creator Avatar */
.avatar-placeholder {
    width: 80px;
    height: 80px;
}

/* Forms */
.form-control {
    border-radius: 12px;
    border: 2px solid #dcfce7;
    padding: 0.75rem 1rem;
    transition: all 0.3s ease;
}

.form-control:focus {
    border-color: #22c55e;
    box-shadow: 0 0 0 0.2rem rgba(34, 197, 94, 0.25);
}

/* Animations */
.fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
}

.fade-in-up:nth-child(1) { animation-delay: 0s; }
.fade-in-up:nth-child(2) { animation-delay: 0.1s; }
.fade-in-up:nth-child(3) { animation-delay: 0.2s; }
.fade-in-up:nth-child(4) { animation-delay: 0.3s; }

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Loading and Error States */
.loading-container, .error-container {
    background: rgba(255, 255, 255, 0.9);
    border-radius: 20px;
    margin: 2rem auto;
    max-width: 500px;
    padding: 3rem;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
    .hero-section {
        text-align: center;
        padding: 2rem 0;
    }
    
    .stats-circle {
        width: 120px;
        height: 120px;
        margin: 0 auto 2rem;
    }
    
    .stat-item {
        flex-direction: column;
        text-align: center;
    }
    
    .stat-icon {
        margin-right: 0;
        margin-bottom: 0.5rem;
    }
}
</style>

<!-- JavaScript -->
<script>
const challengeId = '<%= challengeId %>';

$(document).ready(function() {
    loadChallenge();
    
    // Form submission handlers
    $('#updateProgressForm').on('submit', handleProgressUpdate);
    $('#confirmJoinBtn').on('click', handleJoinChallenge);
    
    function loadChallenge() {
        fetch(`/challenges/api/challenges/${challengeId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    renderChallenge(data.data.challenge, data.data.userProgress, data.data.isParticipating);
                } else {
                    showError();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showError();
            });
    }
    
    function renderChallenge(challenge, userProgress, isParticipating) {
        // Hide loading, show content
        $('#loadingContainer').addClass('d-none');
        $('#challengeContent').removeClass('d-none');
        
        // Basic info
        $('#challengeTitle').text(challenge.title);
        $('#challengeDescription').text(challenge.description);
        $('#targetGoal').text(`${challenge.target.value} ${challenge.target.unit}`);
        $('#duration').text(getDurationText(challenge.duration));
        $('#rewardPoints').text(`${challenge.rewards.points} points`);
        $('#successRate').text(Math.round(challenge.completionRate || 0) + '%');
        $('#participantCount').text(challenge.statistics.totalParticipants || 0);
        
        // Badges
        renderBadges(challenge);
        
        // Creator info
        if (challenge.createdBy) {
            $('#creatorName').text(challenge.createdBy.name || 'Anonymous');
            $('#creatorEmail').text(challenge.createdBy.email || '');
        }
        
        // Instructions
        if (challenge.instructions) {
            $('#instructionsCard').show();
            $('#instructionsContent').html(challenge.instructions.replace(/\n/g, '<br>'));
        }
        
        // Tips
        if (challenge.tips && challenge.tips.length > 0) {
            $('#tipsCard').show();
            let tipsHtml = '<ul class="list-unstyled">';
            challenge.tips.forEach(tip => {
                tipsHtml += `<li class="mb-2"><i class="fas fa-lightbulb text-warning me-2"></i>${tip}</li>`;
            });
            tipsHtml += '</ul>';
            $('#tipsContent').html(tipsHtml);
        }
        
        // Action buttons
        renderActionButtons(challenge, isParticipating);
        
        // Progress (if participating)
        if (isParticipating && userProgress) {
            renderProgress(challenge, userProgress);
        }
    }
    
    function renderBadges(challenge) {
        let badgesHtml = '';
        badgesHtml += `<span class="badge bg-primary">${challenge.category.replace('-', ' ').toUpperCase()}</span>`;
        
        const difficultyClass = {
            'beginner': 'bg-success',
            'intermediate': 'bg-warning',
            'advanced': 'bg-danger'
        };
        badgesHtml += `<span class="badge ${difficultyClass[challenge.difficulty]}">${challenge.difficulty.toUpperCase()}</span>`;
        badgesHtml += `<span class="badge bg-info">${challenge.type.toUpperCase()}</span>`;
        
        $('#challengeBadges').html(badgesHtml);
    }
    
    function renderActionButtons(challenge, isParticipating) {
        let buttonsHtml = '';
        
        <% if (user) { %>
        if (isParticipating) {
            buttonsHtml += `
                <button class="btn btn-success btn-lg" disabled>
                    <i class="fas fa-check-circle me-2"></i>Participating
                </button>
                <button class="btn btn-outline-danger" onclick="leaveChallenge()">
                    <i class="fas fa-times me-2"></i>Leave Challenge
                </button>
            `;
        } else {
            buttonsHtml += `
                <button class="btn btn-success btn-lg" onclick="showJoinModal()">
                    <i class="fas fa-plus me-2"></i>Join Challenge
                </button>
            `;
        }
        
        // Delete button for creator or admin
        if (challenge.createdBy._id === '<%= user ? user._id : "" %>' || '<%= user ? user.role : "" %>' === 'admin') {
            buttonsHtml += `
                <button class="btn btn-outline-danger" onclick="deleteChallenge()">
                    <i class="fas fa-trash me-2"></i>Delete Challenge
                </button>
            `;
        }
        <% } else { %>
        buttonsHtml = `
            <a href="/auth/signin" class="btn btn-success btn-lg">
                <i class="fas fa-sign-in-alt me-2"></i>Sign In to Join
            </a>
        `;
        <% } %>
        
        $('#actionButtons').html(buttonsHtml);
        $('#sidebarActions').html(buttonsHtml);
    }
    
    function renderProgress(challenge, userProgress) {
        $('#progressCard').show();
        
        const percentage = Math.min((userProgress.progress.current / userProgress.progress.target) * 100, 100);
        
        $('#progressPercentage').text(Math.round(percentage) + '%');
        $('#progressBar').css('width', percentage + '%');
        $('#currentProgress').text(`${userProgress.progress.current} ${challenge.target.unit}`);
        $('#targetProgress').text(`${userProgress.progress.target} ${challenge.target.unit}`);
    }
    
    function showJoinModal() {
        $('#modalGoal').text($('#targetGoal').text());
        $('#modalDuration').text($('#duration').text());
        $('#modalReward').text($('#rewardPoints').text().replace(' points', ''));
        $('#joinChallengeModal').modal('show');
    }
    
    function handleJoinChallenge() {
        const button = $('#confirmJoinBtn');
        const originalText = button.html();
        
        button.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Joining...');
        
        fetch(`/challenges/api/challenges/${challengeId}/join`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showToast('Success', 'Successfully joined challenge!', 'success');
                $('#joinChallengeModal').modal('hide');
                setTimeout(() => location.reload(), 1500);
            } else {
                throw new Error(data.error || 'Failed to join challenge');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Error', error.message, 'error');
            button.prop('disabled', false).html(originalText);
        });
    }
    
    function handleProgressUpdate(e) {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        const data = {
            value: parseInt(formData.get('value')),
            notes: formData.get('notes') || ''
        };
        
        const button = $('button[type="submit"]', e.target);
        const originalText = button.html();
        
        button.prop('disabled', true).html('<span class="spinner-border spinner-border-sm me-2"></span>Updating...');
        
        fetch(`/challenges/api/progress/${challengeId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showToast('Success', 'Progress updated successfully!', 'success');
                setTimeout(() => location.reload(), 1500);
            } else {
                throw new Error(data.error || 'Failed to update progress');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Error', error.message, 'error');
            button.prop('disabled', false).html(originalText);
        });
    }
    
    function leaveChallenge() {
        if (confirm('Are you sure you want to leave this challenge?')) {
            fetch(`/challenges/api/challenges/${challengeId}/leave`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Success', 'Left challenge successfully', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    throw new Error(data.error || 'Failed to leave challenge');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('Error', error.message, 'error');
            });
        }
    }
    
    function deleteChallenge() {
        if (confirm('Are you sure you want to delete this challenge? This action cannot be undone.')) {
            fetch(`/challenges/api/challenges/${challengeId}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Success', 'Challenge deleted successfully', 'success');
                    setTimeout(() => window.location.href = '/challenges', 1500);
                } else {
                    throw new Error(data.error || 'Failed to delete challenge');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('Error', error.message, 'error');
            });
        }
    }
    
    function showError() {
        $('#loadingContainer').addClass('d-none');
        $('#errorContainer').removeClass('d-none');
    }
    
    function getDurationText(duration) {
        if (!duration) return 'Ongoing';
        const start = new Date(duration.start);
        const end = new Date(duration.end);
        const days = Math.ceil((end - start) / (1000 * 60 * 60 * 24));
        return days > 1 ? `${days} days` : '1 day';
    }
    
    function showToast(title, message, type) {
        const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
        const alert = $(`
            <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
                 style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;">
                <strong>${title}:</strong> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `);
        $('body').append(alert);
        
        setTimeout(() => {
            alert.alert('close');
        }, 5000);
    }
});
</script>