<%- include('../partials/header') %>

<style>
    /* Revolutionary Medical Dashboard - World's Most Professional X-Ray Management */
    :root {
        /* Advanced Medical Color System */
        --medical-primary: #0066cc;
        --medical-secondary: #4d94ff;
        --medical-accent: #0052a3;
        --medical-light: #e6f2ff;
        --medical-dark: #003d7a;
        
        /* Health Status Colors */
        --status-completed: #10b981;
        --status-processing: #f59e0b;
        --status-failed: #ef4444;
        --status-uploaded: #6366f1;
        
        /* Professional Grays */
        --gray-50: #f9fafb;
        --gray-100: #f3f4f6;
        --gray-200: #e5e7eb;
        --gray-300: #d1d5db;
        --gray-400: #9ca3af;
        --gray-500: #6b7280;
        --gray-600: #4b5563;
        --gray-700: #374151;
        --gray-800: #1f2937;
        --gray-900: #111827;
        
        /* Medical Gradients */
        --gradient-medical: linear-gradient(135deg, var(--medical-primary) 0%, var(--medical-secondary) 100%);
        --gradient-completed: linear-gradient(135deg, var(--status-completed) 0%, #059669 100%);
        --gradient-processing: linear-gradient(135deg, var(--status-processing) 0%, #d97706 100%);
        --gradient-failed: linear-gradient(135deg, var(--status-failed) 0%, #dc2626 100%);
        --gradient-surface: linear-gradient(145deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.98) 100%);
        
        /* Professional Shadows */
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
        --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
        --shadow-medical: 0 20px 25px -5px rgb(0 102 204 / 0.4), 0 8px 10px -6px rgb(0 102 204 / 0.3);
        --shadow-glow: 0 0 30px rgb(0 102 204 / 0.3);
        
        /* Typography Scale */
        --text-xs: 0.75rem;
        --text-sm: 0.875rem;
        --text-base: 1rem;
        --text-lg: 1.125rem;
        --text-xl: 1.25rem;
        --text-2xl: 1.5rem;
        --text-3xl: 1.875rem;
        --text-4xl: 2.25rem;
        
        /* Spacing System */
        --space-1: 0.25rem;
        --space-2: 0.5rem;
        --space-3: 0.75rem;
        --space-4: 1rem;
        --space-5: 1.25rem;
        --space-6: 1.5rem;
        --space-8: 2rem;
        --space-10: 2.5rem;
        --space-12: 3rem;
        --space-16: 4rem;
        --space-20: 5rem;
        
        /* Border Radius */
        --radius-sm: 0.375rem;
        --radius: 0.5rem;
        --radius-md: 0.75rem;
        --radius-lg: 1rem;
        --radius-xl: 1.5rem;
        --radius-2xl: 2rem;
        --radius-full: 9999px;
    }

    /* Global Styles */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
        font-feature-settings: "cv02", "cv03", "cv04", "cv11";
        line-height: 1.6;
        color: var(--gray-800);
        background: linear-gradient(135deg, var(--medical-light) 0%, var(--gray-50) 50%, white 100%);
        min-height: 100vh;
    }

    /* Medical Dashboard Container */
    .dashboard-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: var(--space-8);
    }

    /* Professional Header */
    .dashboard-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: var(--space-10);
        background: var(--gradient-surface);
        backdrop-filter: blur(20px);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        padding: var(--space-8);
        box-shadow: var(--shadow-lg);
        position: relative;
        overflow: hidden;
    }

    .dashboard-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-medical);
    }

    .header-content h1 {
        font-size: var(--text-4xl);
        font-weight: 900;
        color: var(--gray-900);
        margin-bottom: var(--space-2);
        display: flex;
        align-items: center;
        gap: var(--space-3);
    }

    .header-content p {
        color: var(--gray-600);
        font-size: var(--text-lg);
        margin: 0;
    }

    .upload-btn {
        background: var(--gradient-medical);
        color: white;
        border: none;
        border-radius: var(--radius-xl);
        padding: var(--space-5) var(--space-8);
        font-weight: 700;
        font-size: var(--text-lg);
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: var(--space-3);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: var(--shadow-md);
        cursor: pointer;
    }

    .upload-btn:hover {
        transform: translateY(-3px) scale(1.02);
        box-shadow: var(--shadow-medical);
        color: white;
    }

    /* Revolutionary Stats Cards */
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: var(--space-6);
        margin-bottom: var(--space-12);
    }

    .stat-card {
        background: var(--gradient-surface);
        backdrop-filter: blur(20px);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        padding: var(--space-8);
        box-shadow: var(--shadow-lg);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }

    .stat-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
    }

    .stat-card.total::before { background: var(--gradient-medical); }
    .stat-card.completed::before { background: var(--gradient-completed); }
    .stat-card.processing::before { background: var(--gradient-processing); }
    .stat-card.failed::before { background: var(--gradient-failed); }

    .stat-card:hover {
        transform: translateY(-6px);
        box-shadow: var(--shadow-2xl);
        border-color: var(--medical-primary);
    }

    .stat-content {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .stat-info h3 {
        font-size: var(--text-3xl);
        font-weight: 900;
        margin-bottom: var(--space-1);
    }

    .stat-info.total h3 { color: var(--medical-primary); }
    .stat-info.completed h3 { color: var(--status-completed); }
    .stat-info.processing h3 { color: var(--status-processing); }
    .stat-info.failed h3 { color: var(--status-failed); }

    .stat-info p {
        color: var(--gray-600);
        font-size: var(--text-base);
        font-weight: 600;
        margin: 0;
    }

    .stat-icon {
        font-size: 3rem;
        opacity: 0.8;
    }

    .stat-icon.total { color: var(--medical-primary); }
    .stat-icon.completed { color: var(--status-completed); }
    .stat-icon.processing { color: var(--status-processing); }
    .stat-icon.failed { color: var(--status-failed); }

    /* Advanced Filters */
    .filters-section {
        background: var(--gradient-surface);
        backdrop-filter: blur(20px);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        padding: var(--space-8);
        box-shadow: var(--shadow-lg);
        margin-bottom: var(--space-12);
        position: relative;
        overflow: hidden;
    }

    .filters-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-medical);
    }

    .filters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: var(--space-6);
    }

    .filter-group {
        display: flex;
        flex-direction: column;
        gap: var(--space-2);
    }

    .filter-label {
        font-size: var(--text-sm);
        font-weight: 700;
        color: var(--gray-800);
        display: flex;
        align-items: center;
        gap: var(--space-2);
    }

    .filter-label i {
        color: var(--medical-primary);
    }

    .filter-select, .filter-input {
        background: white;
        border: 2px solid var(--gray-200);
        border-radius: var(--radius-lg);
        padding: var(--space-4) var(--space-5);
        font-size: var(--text-base);
        color: var(--gray-700);
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .filter-select:focus, .filter-input:focus {
        outline: none;
        border-color: var(--medical-primary);
        box-shadow: 0 0 0 3px rgba(0, 102, 204, 0.1);
    }

    /* Revolutionary X-Ray Cards */
    .xray-grid {
        display: flex;
        flex-direction: column;
        gap: var(--space-6);
    }

    .xray-card {
        background: var(--gradient-surface);
        backdrop-filter: blur(20px);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        overflow: hidden;
        box-shadow: var(--shadow-lg);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        animation: fadeInUp 0.6s ease-out;
    }

    .xray-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-medical);
        transform: scaleX(0);
        transition: transform 0.4s ease;
    }

    .xray-card:hover {
        transform: translateY(-8px);
        box-shadow: var(--shadow-medical);
        border-color: var(--medical-primary);
    }

    .xray-card:hover::before {
        transform: scaleX(1);
    }

    .xray-content {
        display: grid;
        grid-template-columns: auto 1fr auto;
        gap: var(--space-8);
        padding: var(--space-8);
        align-items: center;
    }

    /* Medical Emoji Display */
    .xray-emoji-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--space-2);
        min-width: 120px;
    }

    .xray-emoji {
        font-size: 4rem;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100px;
        height: 100px;
        background: var(--gradient-surface);
        border: 3px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        box-shadow: var(--shadow-md);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .xray-emoji::before {
        content: '';
        position: absolute;
        inset: 0;
        background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.1) 50%, transparent 70%);
        transform: translateX(-100%);
        transition: transform 0.6s ease;
    }

    .xray-card:hover .xray-emoji {
        transform: scale(1.1);
        border-color: var(--medical-primary);
        box-shadow: var(--shadow-glow);
    }

    .xray-card:hover .xray-emoji::before {
        transform: translateX(100%);
    }

    .scan-type-badge {
        background: var(--medical-primary);
        color: white;
        font-size: var(--text-xs);
        font-weight: 700;
        padding: var(--space-1) var(--space-3);
        border-radius: var(--radius-full);
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    /* X-Ray Details */
    .xray-details {
        flex: 1;
        min-width: 0;
    }

    .xray-header {
        display: flex;
        align-items: center;
        gap: var(--space-4);
        margin-bottom: var(--space-4);
    }

    .xray-title {
        font-size: var(--text-xl);
        font-weight: 800;
        color: var(--gray-900);
        margin: 0;
        display: flex;
        align-items: center;
        gap: var(--space-2);
    }

    .status-badge {
        padding: var(--space-1) var(--space-3);
        border-radius: var(--radius-full);
        font-size: var(--text-xs);
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        display: flex;
        align-items: center;
        gap: var(--space-1);
    }

    .status-badge.completed {
        background: var(--status-completed);
        color: white;
    }

    .status-badge.processing {
        background: var(--status-processing);
        color: white;
        animation: pulse 2s infinite;
    }

    .status-badge.failed {
        background: var(--status-failed);
        color: white;
    }

    .status-badge.uploaded {
        background: var(--status-uploaded);
        color: white;
    }

    .xray-metadata {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: var(--space-4);
        margin-bottom: var(--space-4);
    }

    .metadata-item {
        display: flex;
        align-items: center;
        gap: var(--space-2);
        font-size: var(--text-sm);
        color: var(--gray-600);
    }

    .metadata-item i {
        color: var(--medical-primary);
        width: 16px;
    }

    .metadata-label {
        font-weight: 600;
    }

    .metadata-value {
        color: var(--gray-800);
        font-weight: 500;
    }

    /* Medical Findings */
    .findings-section {
        margin-top: var(--space-4);
        padding: var(--space-4);
        background: var(--gray-50);
        border-radius: var(--radius-lg);
        border-left: 4px solid var(--medical-primary);
    }

    .findings-title {
        font-size: var(--text-sm);
        font-weight: 700;
        color: var(--gray-800);
        margin-bottom: var(--space-2);
        display: flex;
        align-items: center;
        gap: var(--space-2);
    }

    .findings-list {
        display: flex;
        flex-wrap: wrap;
        gap: var(--space-2);
    }

    .finding-tag {
        background: white;
        border: 1px solid var(--gray-300);
        border-radius: var(--radius-md);
        padding: var(--space-1) var(--space-3);
        font-size: var(--text-xs);
        font-weight: 600;
        color: var(--gray-700);
        transition: all 0.2s ease;
    }

    .finding-tag:hover {
        background: var(--medical-primary);
        color: white;
        transform: translateY(-1px);
    }

    /* Action Buttons */
    .xray-actions {
        display: flex;
        flex-direction: column;
        gap: var(--space-3);
        min-width: 140px;
    }

    .action-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: var(--space-2);
        padding: var(--space-3) var(--space-5);
        border-radius: var(--radius-lg);
        font-weight: 600;
        font-size: var(--text-sm);
        text-decoration: none;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: none;
        cursor: pointer;
    }

    .action-btn.primary {
        background: var(--gradient-medical);
        color: white;
        box-shadow: var(--shadow-md);
    }

    .action-btn.primary:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-medical);
        color: white;
    }

    .action-btn.warning {
        background: var(--gradient-processing);
        color: white;
        box-shadow: var(--shadow-md);
    }

    .action-btn.warning:hover {
        transform: translateY(-2px);
        box-shadow: 0 10px 20px -5px rgba(245, 158, 11, 0.4);
        color: white;
    }

    .action-btn.danger {
        background: white;
        color: var(--status-failed);
        border: 2px solid var(--status-failed);
        box-shadow: var(--shadow-sm);
    }

    .action-btn.danger:hover {
        background: var(--status-failed);
        color: white;
        transform: translateY(-2px);
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: var(--space-20);
        background: var(--gradient-surface);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        box-shadow: var(--shadow-lg);
    }

    .empty-icon {
        font-size: 6rem;
        color: var(--gray-400);
        margin-bottom: var(--space-6);
        opacity: 0.8;
    }

    .empty-title {
        font-size: var(--text-2xl);
        font-weight: 800;
        color: var(--gray-900);
        margin-bottom: var(--space-4);
    }

    .empty-description {
        color: var(--gray-600);
        font-size: var(--text-lg);
        margin-bottom: var(--space-8);
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    /* Load More Button */
    .load-more-section {
        text-align: center;
        margin-top: var(--space-12);
    }

    .load-more-btn {
        background: var(--gradient-surface);
        color: var(--medical-primary);
        border: 2px solid var(--medical-primary);
        border-radius: var(--radius-xl);
        padding: var(--space-4) var(--space-8);
        font-weight: 700;
        font-size: var(--text-lg);
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: var(--space-3);
        margin: 0 auto;
    }

    .load-more-btn:hover {
        background: var(--medical-primary);
        color: white;
        transform: translateY(-3px);
        box-shadow: var(--shadow-medical);
    }

    /* Animations */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes pulse {
        0%, 100% {
            opacity: 1;
        }
        50% {
            opacity: 0.7;
        }
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .dashboard-header {
            flex-direction: column;
            gap: var(--space-6);
            text-align: center;
        }
        
        .stats-grid {
            grid-template-columns: repeat(2, 1fr);
        }
        
        .xray-content {
            grid-template-columns: 1fr;
            gap: var(--space-6);
            text-align: center;
        }
        
        .xray-actions {
            flex-direction: row;
            justify-content: center;
        }
    }

    @media (max-width: 768px) {
        .dashboard-container {
            padding: var(--space-4);
        }
        
        .stats-grid {
            grid-template-columns: 1fr;
        }
        
        .filters-grid {
            grid-template-columns: 1fr;
        }
        
        .xray-metadata {
            grid-template-columns: 1fr;
        }
        
        .xray-actions {
            flex-direction: column;
        }
    }

    /* Medical Scan Type Specific Styles */
    .scan-type-chest { background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%); }
    .scan-type-abdominal { background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); }
    .scan-type-dental { background: linear-gradient(135deg, #10b981 0%, #059669 100%); }
    .scan-type-spine { background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%); }
    .scan-type-limb { background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%); }
    .scan-type-other { background: linear-gradient(135deg, #6b7280 0%, #4b5563 100%); }
</style>

<div class="dashboard-container">
    <!-- Professional Header -->
    <div class="dashboard-header">
        <div class="header-content">
            <h1>
                <span style="font-size: 3rem;">🩻</span>
                My X-Ray Scans
            </h1>
            <p>Advanced AI-powered medical imaging analysis dashboard</p>
        </div>
        <a href="/prediction/xray/upload" class="upload-btn">
            <i class="fas fa-plus"></i>
            <span>Upload New X-Ray</span>
        </a>
    </div>

    <!-- Revolutionary Stats Grid -->
    <div class="stats-grid">
        <div class="stat-card total">
            <div class="stat-content">
                <div class="stat-info total">
                    <h3><%= stats.total %></h3>
                    <p>Total Scans</p>
                </div>
                <div class="stat-icon total">
                    🩻
                </div>
            </div>
        </div>

        <div class="stat-card completed">
            <div class="stat-content">
                <div class="stat-info completed">
                    <h3><%= stats.completed %></h3>
                    <p>Completed Analysis</p>
                </div>
                <div class="stat-icon completed">
                    ✅
                </div>
            </div>
        </div>

        <div class="stat-card processing">
            <div class="stat-content">
                <div class="stat-info processing">
                    <h3><%= stats.processing %></h3>
                    <p>Processing Now</p>
                </div>
                <div class="stat-icon processing">
                    ⚡
                </div>
            </div>
        </div>

        <div class="stat-card failed">
            <div class="stat-content">
                <div class="stat-info failed">
                    <h3><%= stats.failed %></h3>
                    <p>Failed Analysis</p>
                </div>
                <div class="stat-icon failed">
                    ❌
                </div>
            </div>
        </div>
    </div>

    <!-- Advanced Filters -->
    <div class="filters-section">
        <div class="filters-grid">
            <div class="filter-group">
                <label class="filter-label">
                    <i class="fas fa-filter"></i>
                    Filter by Status
                </label>
                <select class="filter-select" id="statusFilter">
                    <option value="">All Statuses</option>
                    <option value="completed">✅ Completed</option>
                    <option value="processing">⚡ Processing</option>
                    <option value="failed">❌ Failed</option>
                    <option value="uploaded">📤 Uploaded</option>
                </select>
            </div>

            <div class="filter-group">
                <label class="filter-label">
                    <i class="fas fa-stethoscope"></i>
                    Scan Type
                </label>
                <select class="filter-select" id="scanTypeFilter">
                    <option value="">All Types</option>
                    <option value="chest">🫁 Chest X-Ray</option>
                    <option value="abdominal">🦴 Abdominal</option>
                    <option value="dental">🦷 Dental</option>
                    <option value="spine">🦴 Spine</option>
                    <option value="limb">🦴 Limb/Bone</option>
                    <option value="other">📋 Other</option>
                </select>
            </div>

            <div class="filter-group">
                <label class="filter-label">
                    <i class="fas fa-search"></i>
                    Search Scans
                </label>
                <input
                    type="text"
                    class="filter-input"
                    id="searchInput"
                    placeholder="Search by notes, ID, or findings..."
                />
            </div>
        </div>
    </div>

    <!-- Revolutionary X-Ray Grid -->
    <div class="xray-grid" id="xrayList">
        <% if (xrays && xrays.length > 0) { %>
            <% xrays.forEach((xray, index) => { 
                // Function to get emoji based on scan type
                function getScanEmoji(scanType) {
                    const emojiMap = {
                        'chest': '🫁',
                        'abdominal': '🫄',
                        'dental': '🦷',
                        'spine': '🦴',
                        'limb': '🦾',
                        'bone': '🦴',
                        'skull': '💀',
                        'hand': '🤚',
                        'foot': '🦶',
                        'pelvis': '🫂',
                        'other': '🩻'
                    };
                    return emojiMap[scanType?.toLowerCase()] || '🩻';
                }
                
                // Function to get status emoji
                function getStatusEmoji(status) {
                    const statusMap = {
                        'completed': '✅',
                        'processing': '⚡',
                        'failed': '❌',
                        'uploaded': '📤'
                    };
                    return statusMap[status] || '⏳';
                }
            %>
            <div class="xray-card xray-item" 
                 data-status="<%= xray.status %>" 
                 data-scan-type="<%= xray.scanType || 'unknown' %>"
                 style="animation-delay: <%= index * 0.1 %>s;">
                
                <div class="xray-content">
                    <!-- Medical Emoji Display -->
                    <div class="xray-emoji-container">
                        <div class="xray-emoji">
                            <%= getScanEmoji(xray.scanType) %>
                        </div>
                        <div class="scan-type-badge scan-type-<%= xray.scanType || 'other' %>">
                            <%= (xray.scanType || 'Other').toUpperCase() %>
                        </div>
                    </div>

                    <!-- X-Ray Details -->
                    <div class="xray-details">
                        <div class="xray-header">
                            <h3 class="xray-title">
                                <%= (xray.scanType || 'Unknown').charAt(0).toUpperCase() + (xray.scanType || 'Unknown').slice(1) %> X-Ray Scan
                            </h3>
                            <div class="status-badge <%= xray.status %>">
                                <%= getStatusEmoji(xray.status) %>
                                <%= xray.status.charAt(0).toUpperCase() + xray.status.slice(1) %>
                            </div>
                        </div>

                        <div class="xray-metadata">
                            <div class="metadata-item">
                                <i class="fas fa-calendar-alt"></i>
                                <span class="metadata-label">Uploaded:</span>
                                <span class="metadata-value">
                                    <%= new Date(xray.createdAt).toLocaleDateString('en-US', { 
                                        year: 'numeric', 
                                        month: 'short', 
                                        day: 'numeric',
                                        hour: '2-digit',
                                        minute: '2-digit'
                                    }) %>
                                </span>
                            </div>

                            <div class="metadata-item">
                                <i class="fas fa-file-image"></i>
                                <span class="metadata-label">File:</span>
                                <span class="metadata-value"><%= xray.file_name || 'Unknown filename' %></span>
                            </div>

                            <% if (xray.inference_time_ms) { %>
                            <div class="metadata-item">
                                <i class="fas fa-stopwatch"></i>
                                <span class="metadata-label">Analysis Time:</span>
                                <span class="metadata-value"><%= (xray.inference_time_ms / 1000).toFixed(1) %>s</span>
                            </div>
                            <% } %>

                            <div class="metadata-item">
                                <i class="fas fa-microchip"></i>
                                <span class="metadata-label">AI Model:</span>
                                <span class="metadata-value"><%= xray.model_version || 'v2.1.0' %></span>
                            </div>
                        </div>

                        <!-- Medical Findings -->
                        <% if (xray.status === 'completed' && xray.predictions) { %>
                            <% 
                            const predictions = typeof xray.predictions === 'string' ? JSON.parse(xray.predictions) : xray.predictions;
                            const topFindings = Object.entries(predictions).sort(([,a], [,b]) => b - a).slice(0, 3);
                            %>
                            <div class="findings-section">
                                <div class="findings-title">
                                    <i class="fas fa-search-plus"></i>
                                    Top Medical Findings
                                </div>
                                <div class="findings-list">
                                    <% topFindings.forEach(([condition, confidence]) => { %>
                                        <div class="finding-tag">
                                            <%= condition.replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %>: 
                                            <strong><%= (confidence * 100).toFixed(1) %>%</strong>
                                        </div>
                                    <% }); %>
                                </div>
                            </div>
                        <% } %>

                        <% if (xray.notes) { %>
                        <div class="findings-section" style="border-left-color: var(--status-uploaded);">
                            <div class="findings-title">
                                <i class="fas fa-sticky-note"></i>
                                Clinical Notes
                            </div>
                            <p style="color: var(--gray-700); font-size: var(--text-sm); margin: 0;">
                                <%= xray.notes %>
                            </p>
                        </div>
                        <% } %>
                    </div>

                    <!-- Action Buttons -->
                    <div class="xray-actions">
                        <a href="/prediction/xray/<%= xray._id %>" class="action-btn primary">
                            <i class="fas fa-eye"></i>
                            <span>View Analysis</span>
                        </a>

                        <% if (xray.status === 'failed') { %>
                        <button class="action-btn warning" onclick="retryAnalysis('<%= xray._id %>')">
                            <i class="fas fa-redo"></i>
                            <span>Retry Analysis</span>
                        </button>
                        <% } %>

                        <button class="action-btn danger" onclick="deleteXray('<%= xray._id %>')">
                            <i class="fas fa-trash-alt"></i>
                            <span>Delete Scan</span>
                        </button>
                    </div>
                </div>
            </div>
            <% }); %>
        <% } else { %>
            <!-- Revolutionary Empty State -->
            <div class="empty-state">
                <div class="empty-icon">🩻</div>
                <h3 class="empty-title">No X-Ray Scans Found</h3>
                <p class="empty-description">
                    Upload your first medical image to get started with our advanced AI-powered analysis system.
                </p>
                <a href="/prediction/xray/upload" class="upload-btn">
                    <i class="fas fa-upload"></i>
                    <span>Upload First X-Ray</span>
                </a>
            </div>
        <% } %>
    </div>

    <!-- Load More Section -->
    <div class="load-more-section" id="loadMoreContainer" style="display: none;">
        <button class="load-more-btn" id="loadMoreBtn">
            <i class="fas fa-chevron-down"></i>
            <span>Load More Scans</span>
        </button>
    </div>
</div>

<!-- Revolutionary JavaScript -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Filter functionality
        const statusFilter = document.getElementById('statusFilter');
        const scanTypeFilter = document.getElementById('scanTypeFilter');
        const searchInput = document.getElementById('searchInput');
        const xrayItems = document.querySelectorAll('.xray-item');

        function filterXrays() {
            const statusValue = statusFilter.value.toLowerCase();
            const scanTypeValue = scanTypeFilter.value.toLowerCase();
            const searchValue = searchInput.value.toLowerCase();

            xrayItems.forEach(item => {
                const status = item.dataset.status;
                const scanType = item.dataset.scanType;
                const textContent = item.textContent.toLowerCase();

                const statusMatch = !statusValue || status === statusValue;
                const scanTypeMatch = !scanTypeValue || scanType === scanTypeValue;
                const searchMatch = !searchValue || textContent.includes(searchValue);

                if (statusMatch && scanTypeMatch && searchMatch) {
                    item.style.display = 'block';
                    item.style.animation = 'fadeInUp 0.6s ease-out';
                } else {
                    item.style.display = 'none';
                }
            });

            // Check if any items are visible
            const visibleItems = Array.from(xrayItems).filter(item => item.style.display !== 'none');
            const emptyState = document.querySelector('.empty-state');
            
            if (visibleItems.length === 0 && !emptyState) {
                showNoResultsMessage();
            } else if (visibleItems.length > 0) {
                hideNoResultsMessage();
            }
        }

        function showNoResultsMessage() {
            const xrayList = document.getElementById('xrayList');
            const noResults = document.createElement('div');
            noResults.className = 'empty-state';
            noResults.id = 'noResults';
            noResults.innerHTML = `
                <div class="empty-icon">🔍</div>
                <h3 class="empty-title">No Results Found</h3>
                <p class="empty-description">
                    Try adjusting your search criteria or filters to find the X-ray scans you're looking for.
                </p>
                <button class="upload-btn" onclick="clearFilters()" style="background: var(--gradient-processing);">
                    <i class="fas fa-times"></i>
                    <span>Clear All Filters</span>
                </button>
            `;
            xrayList.appendChild(noResults);
        }

        function hideNoResultsMessage() {
            const noResults = document.getElementById('noResults');
            if (noResults) {
                noResults.remove();
            }
        }

        window.clearFilters = function() {
            statusFilter.value = '';
            scanTypeFilter.value = '';
            searchInput.value = '';
            filterXrays();
        };

        // Event listeners
        statusFilter.addEventListener('change', filterXrays);
        scanTypeFilter.addEventListener('change', filterXrays);
        searchInput.addEventListener('input', filterXrays);

        // Auto-refresh for processing scans
        const hasProcessingScans = Array.from(xrayItems).some(item => 
            item.dataset.status === 'processing'
        );

        if (hasProcessingScans) {
            setInterval(() => {
                location.reload();
            }, 30000); // Refresh every 30 seconds
        }

        // Initialize animations
        xrayItems.forEach((item, index) => {
            item.style.opacity = '0';
            item.style.transform = 'translateY(30px)';
            
            setTimeout(() => {
                item.style.opacity = '1';
                item.style.transform = 'translateY(0)';
                item.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';
            }, index * 100);
        });
    });

    // Retry analysis function
    function retryAnalysis(xrayId) {
        if (confirm('🔄 Retry the AI analysis for this X-ray scan?')) {
            showNotification('⚡ Retrying analysis...', 'info');
            
            fetch(`/prediction/xray/${xrayId}/retry`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('✅ Analysis restarted successfully!', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification('❌ Retry failed: ' + (data.message || 'Unknown error'), 'error');
                }
            })
            .catch(error => {
                showNotification('❌ Error: ' + error.message, 'error');
            });
        }
    }

    // Delete X-ray function
    function deleteXray(xrayId) {
        if (confirm('🗑️ Are you sure you want to permanently delete this X-ray scan?\n\nThis action cannot be undone.')) {
            showNotification('🗑️ Deleting scan...', 'info');
            
            fetch(`/prediction/xray/${xrayId}`, {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('✅ X-ray scan deleted successfully!', 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showNotification('❌ Delete failed: ' + (data.message || 'Unknown error'), 'error');
                }
            })
            .catch(error => {
                showNotification('❌ Error: ' + error.message, 'error');
            });
        }
    }

    // Professional notification system
    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            background: ${type === 'success' ? 'var(--status-completed)' : 
                           type === 'error' ? 'var(--status-failed)' : 
                           'var(--medical-primary)'};
            color: white;
            padding: 1rem 1.5rem;
            border-radius: var(--radius-xl);
            box-shadow: var(--shadow-2xl);
            z-index: 10000;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            transform: translateX(400px);
            transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        `;
        
        notification.textContent = message;
        document.body.appendChild(notification);
        
        // Slide in
        setTimeout(() => {
            notification.style.transform = 'translateX(0)';
        }, 100);
        
        // Slide out and remove
        setTimeout(() => {
            notification.style.transform = 'translateX(400px)';
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 400);
        }, 3000);
    }

    // Enhanced keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        // Ctrl/Cmd + K to focus search
        if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
            e.preventDefault();
            document.getElementById('searchInput').focus();
        }
        
        // Escape to clear search
        if (e.key === 'Escape') {
            clearFilters();
        }
        
        // Ctrl/Cmd + U for upload
        if ((e.ctrlKey || e.metaKey) && e.key === 'u') {
            e.preventDefault();
            window.location.href = '/prediction/xray/upload';
        }
    });

    // Professional loading states
    window.addEventListener('beforeunload', function() {
        document.body.style.opacity = '0.8';
        document.body.style.transition = 'opacity 0.3s ease';
    });
</script>

<%- include('../partials/footer') %>
