<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat | Healthfy</title>
    <meta name="description" content="Your AI Health Assistant">

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/favicon.ico">

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            overflow: hidden;
        }

        /* Header */
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem 0;
            box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }

        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 2rem;
        }

        .logo {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: #2d3748;
            font-weight: 700;
            font-size: 1.5rem;
        }

        .logo i {
            margin-right: 0.5rem;
            color: #667eea;
            font-size: 1.8rem;
        }

        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
        }

        /* Chat Container */
        .chat-container {
            height: 100vh;
            display: flex;
            flex-direction: column;
            margin-top: 80px;
            max-width: 1000px;
            margin-left: auto;
            margin-right: auto;
            padding: 0 1rem;
        }

        .chat-header {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            padding: 1.5rem;
            border-radius: 20px 20px 0 0;
            text-align: center;
            border-bottom: 2px solid #e2e8f0;
        }

        .chat-title {
            color: #2d3748;
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .chat-subtitle {
            color: #718096;
            font-size: 1rem;
            font-weight: 400;
        }

        /* Chat Messages Area */
        .chat-messages {
            flex: 1;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            overflow-y: auto;
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            gap: 1rem;
            max-height: calc(100vh - 300px);
        }

        .message {
            display: flex;
            gap: 1rem;
            animation: slideIn 0.3s ease-out;
        }

        .message.user {
            flex-direction: row-reverse;
        }

        .message-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .message-avatar.user {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .message-avatar.ai {
            background: linear-gradient(135deg, #48bb78, #38a169);
            color: white;
        }

        .message-content {
            max-width: 70%;
            padding: 1rem 1.5rem;
            border-radius: 20px;
            position: relative;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .message.user .message-content {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border-bottom-right-radius: 5px;
        }

        .message.ai .message-content {
            background: #f7fafc;
            color: #2d3748;
            border: 1px solid #e2e8f0;
            border-bottom-left-radius: 5px;
        }

        .message-time {
            font-size: 0.75rem;
            opacity: 0.7;
            margin-top: 0.5rem;
        }

        /* Welcome Message */
        .welcome-message {
            text-align: center;
            padding: 2rem;
            color: #718096;
        }

        .welcome-message h3 {
            color: #2d3748;
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }

        .quick-suggestions {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            justify-content: center;
            margin-top: 1.5rem;
        }

        .suggestion-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            text-decoration: none;
        }

        .suggestion-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        /* Input Area */
        .chat-input-container {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            padding: 1.5rem;
            border-radius: 0 0 20px 20px;
            border-top: 2px solid #e2e8f0;
        }

        .chat-input-wrapper {
            display: flex;
            gap: 1rem;
            align-items: flex-end;
        }

        .chat-input {
            flex: 1;
            border: 2px solid #e2e8f0;
            border-radius: 25px;
            padding: 1rem 1.5rem;
            font-size: 1rem;
            font-family: 'Poppins', sans-serif;
            resize: none;
            outline: none;
            transition: all 0.3s ease;
            min-height: 50px;
            max-height: 120px;
        }

        .chat-input:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .send-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .send-btn:hover {
            transform: translateY(-2px) scale(1.05);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }

        .send-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        /* Loading Indicator */
        .typing-indicator {
            display: none;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem;
            color: #718096;
            font-style: italic;
        }

        .typing-dots {
            display: flex;
            gap: 0.2rem;
        }

        .typing-dot {
            width: 6px;
            height: 6px;
            border-radius: 50%;
            background: #667eea;
            animation: bounce 1.4s infinite ease-in-out;
        }

        .typing-dot:nth-child(1) { animation-delay: -0.32s; }
        .typing-dot:nth-child(2) { animation-delay: -0.16s; }

        /* Animations */
        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes bounce {
            0%, 80%, 100% {
                transform: scale(0);
            } 40% {
                transform: scale(1);
            }
        }

        /* Scrollbar */
        .chat-messages::-webkit-scrollbar {
            width: 6px;
        }

        .chat-messages::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .chat-messages::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 10px;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            .header-content {
                padding: 0 1rem;
            }

            .chat-container {
                padding: 0 0.5rem;
            }

            .message-content {
                max-width: 85%;
            }

            .chat-title {
                font-size: 1.5rem;
            }

            .quick-suggestions {
                flex-direction: column;
                align-items: center;
            }
        }

        /* Status indicator */
        .status-indicator {
            position: fixed;
            top: 90px;
            right: 20px;
            background: #48bb78;
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 0.8rem;
            z-index: 1000;
            display: none;
        }

        .status-indicator.error {
            background: #f56565;
        }
    </style>
</head>
<body>
    <!-- Status Indicator -->
    <div class="status-indicator" id="statusIndicator"></div>

    <!-- Header -->
    <header class="header">
        <div class="header-content">
            <a href="/" class="logo">
                <i class="fas fa-heartbeat"></i>
                Healthfy
            </a>

            <div class="user-info">
                <div class="user-avatar">U</div>
                <span>Hello, User!</span>
            </div>
        </div>
    </header>

    <!-- Chat Container -->
    <div class="chat-container">
        <!-- Chat Header -->
        <div class="chat-header">
            <h1 class="chat-title">
                <i class="fas fa-robot"></i>
                HealthyAI Assistant
            </h1>
            <p class="chat-subtitle">Your personal AI health advisor • Available 24/7</p>
        </div>

        <!-- Chat Messages -->
        <div class="chat-messages" id="chatMessages">
            <div class="welcome-message" id="welcomeMessage">
                <h3>👋 Hello! I'm your HealthyAI Assistant</h3>
                <p>I'm here to help you with health questions, medical advice, and wellness tips. How can I assist you today?</p>

                <div class="quick-suggestions">
                    <button class="suggestion-btn" onclick="sendSuggestion('What are the symptoms of common cold?')">
                        Common Cold Symptoms
                    </button>
                    <button class="suggestion-btn" onclick="sendSuggestion('How can I improve my immunity?')">
                        Boost Immunity
                    </button>
                    <button class="suggestion-btn" onclick="sendSuggestion('What should I eat for better health?')">
                        Healthy Diet Tips
                    </button>
                    <button class="suggestion-btn" onclick="sendSuggestion('How much water should I drink daily?')">
                        Daily Water Intake
                    </button>
                </div>
            </div>

            <!-- Typing Indicator -->
            <div class="typing-indicator" id="typingIndicator">
                <i class="fas fa-robot"></i>
                <span>HealthyAI is thinking</span>
                <div class="typing-dots">
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                </div>
            </div>
        </div>

        <!-- Chat Input -->
        <div class="chat-input-container">
            <div class="chat-input-wrapper">
                <textarea
                    class="chat-input"
                    id="messageInput"
                    placeholder="Ask me anything about health..."
                    rows="1"></textarea>
                <button class="send-btn" id="sendBtn">
                    <i class="fas fa-paper-plane"></i>
                </button>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let chatHistory = [];
        let isSending = false;

        // DOM elements
        let messageInput, chatMessages, typingIndicator, sendBtn, welcomeMessage, statusIndicator;

        // Initialize when DOM is ready
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Initializing Healthfy Chat...');

            // Get DOM elements
            messageInput = document.getElementById('messageInput');
            chatMessages = document.getElementById('chatMessages');
            typingIndicator = document.getElementById('typingIndicator');
            sendBtn = document.getElementById('sendBtn');
            welcomeMessage = document.getElementById('welcomeMessage');
            statusIndicator = document.getElementById('statusIndicator');

            // Verify elements exist
            if (!messageInput || !chatMessages || !sendBtn) {
                console.error('❌ Required DOM elements not found!');
                showStatus('System error: Interface not loaded properly', 'error');
                return;
            }

            console.log('✅ DOM elements found successfully');

            // Set up event listeners
            setupEventListeners();

            // Show ready status
            showStatus('Chat system ready!');
            setTimeout(() => hideStatus(), 2000);

            console.log('🎉 Chat system initialized successfully!');
        });

        function setupEventListeners() {
            // Enter key handler
            messageInput.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' && !e.shiftKey) {
                    e.preventDefault();
                    console.log('⌨️ Enter key pressed');
                    sendMessage();
                }
            });

            // Send button click
            sendBtn.addEventListener('click', function(e) {
                e.preventDefault();
                console.log('🖱️ Send button clicked');
                sendMessage();
            });

            // Auto-resize textarea
            messageInput.addEventListener('input', function() {
                this.style.height = 'auto';
                this.style.height = Math.min(this.scrollHeight, 120) + 'px';
            });

            // Focus input on page load
            messageInput.focus();
        }

        async function sendMessage() {
            console.log('📤 sendMessage() called');

            if (isSending) {
                console.log('⏳ Already sending message, please wait...');
                return;
            }

            const message = messageInput.value.trim();
            if (!message) {
                console.log('❌ Empty message');
                showStatus('Please enter a message', 'error');
                setTimeout(() => hideStatus(), 2000);
                return;
            }

            console.log('💬 Sending message:', message);

            try {
                isSending = true;

                // Disable input and button
                messageInput.disabled = true;
                sendBtn.disabled = true;

                // Hide welcome message
                if (welcomeMessage) {
                    welcomeMessage.style.display = 'none';
                }

                // Add user message to chat
                addMessage('user', message);

                // Clear input
                messageInput.value = '';
                messageInput.style.height = 'auto';

                // Show typing indicator
                if (typingIndicator) {
                    typingIndicator.style.display = 'flex';
                }

                // Simulate API call (replace with your actual API endpoint)
                const aiResponse = await callHealthAI(message);

                // Hide typing indicator
                if (typingIndicator) {
                    typingIndicator.style.display = 'none';
                }

                // Add AI response
                addMessage('ai', aiResponse);

                // Update chat history
                chatHistory.push(
                    { sender: 'user', message: message },
                    { sender: 'ai', message: aiResponse }
                );

                // Keep history manageable
                if (chatHistory.length > 20) {
                    chatHistory = chatHistory.slice(-20);
                }

                console.log('✅ Message sent successfully');

            } catch (error) {
                console.error('❌ Error sending message:', error);

                // Hide typing indicator
                if (typingIndicator) {
                    typingIndicator.style.display = 'none';
                }

                // Show error message
                addMessage('ai', 'Sorry, I encountered an error. Please try again! 🤖');
                showStatus('Connection error - please try again', 'error');
                setTimeout(() => hideStatus(), 3000);

            } finally {
                // Re-enable input and button
                messageInput.disabled = false;
                sendBtn.disabled = false;
                messageInput.focus();
                isSending = false;
            }
        }

        async function callHealthAI(message) {
            // This is where you'd call your actual AI API
            // For now, I'll simulate the API call

            try {
                const response = await fetch('/ai/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        message: message,
                        conversationHistory: chatHistory
                    })
                });

                const data = await response.json();

                if (data.success) {
                    return data.response;
                } else {
                    throw new Error(data.message || 'AI service error');
                }

            } catch (error) {
                console.error('AI API Error:', error);

                // Fallback response for demo purposes
                return generateDemoResponse(message);
            }
        }

        function generateDemoResponse(message) {
            // Demo responses for testing
            const responses = [
                "Thank you for your question about health! I'm here to help you with medical information and wellness advice.",
                "That's a great health-related question! Let me provide you with some helpful information based on current medical knowledge.",
                "I understand your concern. Here are some evidence-based recommendations for your health query.",
                "Health is very important! Based on your question, I recommend consulting with healthcare professionals for personalized advice.",
                "That's an excellent question about wellness! Let me share some general health information that might be helpful."
            ];

            return responses[Math.floor(Math.random() * responses.length)] +
                   "\n\n(This is a demo response. Connect your real AI service to get actual health advice!)";
        }

        function addMessage(sender, content) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}`;

            const time = new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
            const avatar = sender === 'user' ? 'U' : '<i class="fas fa-robot"></i>';

            messageDiv.innerHTML = `
                <div class="message-avatar ${sender}">${avatar}</div>
                <div class="message-content">
                    <div class="message-text">${escapeHtml(content).replace(/\n/g, '<br>')}</div>
                    <div class="message-time">${time}</div>
                </div>
            `;

            chatMessages.appendChild(messageDiv);

            // Scroll to bottom
            setTimeout(() => {
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }, 100);
        }

        function sendSuggestion(suggestion) {
            messageInput.value = suggestion;
            sendMessage();
        }

        function escapeHtml(text) {
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        function showStatus(message, type = 'success') {
            if (statusIndicator) {
                statusIndicator.textContent = message;
                statusIndicator.className = `status-indicator ${type}`;
                statusIndicator.style.display = 'block';
            }
        }

        function hideStatus() {
            if (statusIndicator) {
                statusIndicator.style.display = 'none';
            }
        }

        // Test function for debugging
        function testChat() {
            console.log('🧪 Testing chat system...');
            messageInput.value = 'Hello! This is a test message.';
            sendMessage();
        }

        // Make test function globally available
        window.testChat = testChat;

        console.log('📜 Chat script loaded successfully!');
    </script>
</body>
</html>
