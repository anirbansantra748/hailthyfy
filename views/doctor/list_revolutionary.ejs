<%- include('../partials/header') %>

<style>
    /* Revolutionary Healthcare Directory - World's Most Professional Design */
    :root {
        /* Advanced Healthcare Color System */
        --emerald-50: #ecfdf5;
        --emerald-100: #d1fae5;
        --emerald-200: #a7f3d0;
        --emerald-300: #6ee7b7;
        --emerald-400: #34d399;
        --emerald-500: #10b981;
        --emerald-600: #059669;
        --emerald-700: #047857;
        --emerald-800: #065f46;
        --emerald-900: #064e3b;
        
        /* Professional Medical Blues */
        --medical-blue-50: #eff6ff;
        --medical-blue-100: #dbeafe;
        --medical-blue-200: #bfdbfe;
        --medical-blue-300: #93c5fd;
        --medical-blue-400: #60a5fa;
        --medical-blue-500: #3b82f6;
        --medical-blue-600: #2563eb;
        --medical-blue-700: #1d4ed8;
        --medical-blue-800: #1e40af;
        --medical-blue-900: #1e3a8a;
        
        /* Advanced Gray Scale */
        --gray-50: #f9fafb;
        --gray-100: #f3f4f6;
        --gray-200: #e5e7eb;
        --gray-300: #d1d5db;
        --gray-400: #9ca3af;
        --gray-500: #6b7280;
        --gray-600: #4b5563;
        --gray-700: #374151;
        --gray-800: #1f2937;
        --gray-900: #111827;
        
        /* Status Colors */
        --status-verified: #10b981;
        --status-pending: #f59e0b;
        --status-warning: #ef4444;
        --status-info: #3b82f6;
        
        /* Professional Gradients */
        --gradient-primary: linear-gradient(135deg, var(--emerald-500) 0%, var(--emerald-600) 100%);
        --gradient-secondary: linear-gradient(135deg, var(--medical-blue-500) 0%, var(--medical-blue-600) 100%);
        --gradient-hero: linear-gradient(135deg, var(--emerald-600) 0%, var(--medical-blue-600) 50%, var(--emerald-700) 100%);
        --gradient-surface: linear-gradient(145deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.98) 100%);
        --gradient-glass: linear-gradient(145deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
        --gradient-verified: linear-gradient(135deg, #10b981 0%, #059669 100%);
        --gradient-premium: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
        
        /* Advanced Shadows */
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
        --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
        --shadow-3xl: 0 35px 60px -12px rgb(0 0 0 / 0.3);
        --shadow-emerald: 0 20px 25px -5px rgb(16 185 129 / 0.4), 0 8px 10px -6px rgb(16 185 129 / 0.3);
        --shadow-blue: 0 20px 25px -5px rgb(59 130 246 / 0.4), 0 8px 10px -6px rgb(59 130 246 / 0.3);
        --shadow-verified: 0 10px 20px -5px rgb(16 185 129 / 0.3);
        --shadow-glow: 0 0 20px rgb(16 185 129 / 0.3);
        
        /* Typography Scale */
        --text-xs: 0.75rem;
        --text-sm: 0.875rem;
        --text-base: 1rem;
        --text-lg: 1.125rem;
        --text-xl: 1.25rem;
        --text-2xl: 1.5rem;
        --text-3xl: 1.875rem;
        --text-4xl: 2.25rem;
        --text-5xl: 3rem;
        --text-6xl: 3.75rem;
        
        /* Spacing System */
        --space-1: 0.25rem;
        --space-2: 0.5rem;
        --space-3: 0.75rem;
        --space-4: 1rem;
        --space-5: 1.25rem;
        --space-6: 1.5rem;
        --space-8: 2rem;
        --space-10: 2.5rem;
        --space-12: 3rem;
        --space-16: 4rem;
        --space-20: 5rem;
        --space-24: 6rem;
        --space-32: 8rem;
        
        /* Border Radius */
        --radius-sm: 0.375rem;
        --radius: 0.5rem;
        --radius-md: 0.75rem;
        --radius-lg: 1rem;
        --radius-xl: 1.5rem;
        --radius-2xl: 2rem;
        --radius-3xl: 3rem;
        --radius-full: 9999px;
    }

    /* Global Styles */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
        font-feature-settings: "cv02", "cv03", "cv04", "cv11";
        line-height: 1.6;
        color: var(--gray-800);
        background: linear-gradient(135deg, var(--emerald-50) 0%, var(--medical-blue-50) 50%, var(--gray-50) 100%);
        min-height: 100vh;
        overflow-x: hidden;
    }

    /* Revolutionary Hero Section */
    .doctors-hero {
        background: var(--gradient-hero);
        position: relative;
        overflow: hidden;
        padding: var(--space-20) 0 var(--space-16);
        margin-bottom: var(--space-12);
    }

    .doctors-hero::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: 
            radial-gradient(circle at 20% 20%, rgba(59, 130, 246, 0.3) 0%, transparent 25%),
            radial-gradient(circle at 80% 80%, rgba(16, 185, 129, 0.2) 0%, transparent 25%),
            radial-gradient(circle at 40% 70%, rgba(34, 211, 153, 0.2) 0%, transparent 25%);
        animation: heroFloat 25s ease-in-out infinite;
    }

    @keyframes heroFloat {
        0%, 100% { transform: scale(1) rotate(0deg); }
        33% { transform: scale(1.05) rotate(1deg); }
        66% { transform: scale(0.98) rotate(-0.5deg); }
    }

    .hero-content {
        position: relative;
        z-index: 2;
        text-align: center;
        color: white;
    }

    .hero-badge {
        display: inline-flex;
        align-items: center;
        gap: var(--space-2);
        background: rgba(255, 255, 255, 0.15);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--radius-full);
        padding: var(--space-3) var(--space-6);
        font-size: var(--text-sm);
        font-weight: 600;
        margin-bottom: var(--space-8);
        box-shadow: var(--shadow-lg);
        animation: fadeInUp 0.8s ease-out;
    }

    .hero-title {
        font-size: clamp(2.5rem, 5vw, 4rem);
        font-weight: 900;
        line-height: 1.1;
        margin-bottom: var(--space-6);
        letter-spacing: -0.02em;
        animation: fadeInUp 0.8s ease-out 0.1s both;
    }

    .hero-subtitle {
        font-size: var(--text-xl);
        color: rgba(255, 255, 255, 0.9);
        max-width: 48rem;
        margin: 0 auto var(--space-10);
        line-height: 1.6;
        animation: fadeInUp 0.8s ease-out 0.2s both;
    }

    .hero-stats {
        display: flex;
        justify-content: center;
        gap: var(--space-12);
        margin-bottom: var(--space-8);
        animation: fadeInUp 0.8s ease-out 0.3s both;
    }

    .stat-item {
        text-align: center;
    }

    .stat-number {
        display: block;
        font-size: var(--text-3xl);
        font-weight: 900;
        margin-bottom: var(--space-1);
    }

    .stat-label {
        font-size: var(--text-sm);
        color: rgba(255, 255, 255, 0.8);
    }

    /* Container Layout */
    .doctors-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 0 var(--space-8);
    }

    /* Revolutionary Search & Filters */
    .search-section {
        background: var(--gradient-surface);
        backdrop-filter: blur(20px);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        padding: var(--space-8);
        box-shadow: var(--shadow-lg);
        margin-bottom: var(--space-12);
        position: relative;
        overflow: hidden;
    }

    .search-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-primary);
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }

    .search-section:focus-within::before {
        transform: scaleX(1);
    }

    .search-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: var(--space-8);
    }

    .search-title {
        font-size: var(--text-2xl);
        font-weight: 800;
        color: var(--gray-900);
        display: flex;
        align-items: center;
        gap: var(--space-3);
    }

    .search-title i {
        color: var(--emerald-500);
    }

    .doctors-count {
        text-align: right;
    }

    .count-primary {
        font-size: var(--text-2xl);
        font-weight: 900;
        color: var(--emerald-600);
        display: block;
    }

    .count-secondary {
        font-size: var(--text-sm);
        color: var(--gray-600);
    }

    /* Advanced Search Form */
    .search-form {
        display: grid;
        gap: var(--space-6);
    }

    .search-primary {
        display: grid;
        grid-template-columns: 1fr auto;
        gap: var(--space-4);
        align-items: end;
    }

    .search-input-group {
        position: relative;
    }

    .search-input {
        width: 100%;
        background: white;
        border: 2px solid var(--gray-200);
        border-radius: var(--radius-xl);
        padding: var(--space-5) var(--space-6) var(--space-5) var(--space-16);
        font-size: var(--text-lg);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: var(--shadow-sm);
    }

    .search-input:focus {
        outline: none;
        border-color: var(--emerald-500);
        box-shadow: var(--shadow-emerald);
        transform: translateY(-2px);
    }

    .search-icon {
        position: absolute;
        left: var(--space-5);
        top: 50%;
        transform: translateY(-50%);
        color: var(--gray-400);
        font-size: var(--text-xl);
        transition: color 0.3s ease;
    }

    .search-input:focus + .search-icon {
        color: var(--emerald-500);
    }

    .search-btn {
        background: var(--gradient-primary);
        border: none;
        border-radius: var(--radius-xl);
        padding: var(--space-5) var(--space-10);
        color: white;
        font-weight: 700;
        font-size: var(--text-lg);
        cursor: pointer;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: var(--shadow-md);
        display: flex;
        align-items: center;
        gap: var(--space-3);
        min-width: 140px;
        justify-content: center;
    }

    .search-btn:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-emerald);
    }

    /* Filter Grid */
    .filters-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: var(--space-6);
        padding-top: var(--space-6);
        border-top: 1px solid var(--gray-200);
    }

    .filter-group {
        display: flex;
        flex-direction: column;
        gap: var(--space-2);
    }

    .filter-label {
        font-size: var(--text-sm);
        font-weight: 700;
        color: var(--gray-800);
        display: flex;
        align-items: center;
        gap: var(--space-2);
    }

    .filter-label i {
        color: var(--emerald-500);
    }

    .filter-select {
        background: white;
        border: 2px solid var(--gray-200);
        border-radius: var(--radius-lg);
        padding: var(--space-4) var(--space-5);
        font-size: var(--text-base);
        color: var(--gray-700);
        transition: all 0.3s ease;
        cursor: pointer;
    }

    .filter-select:focus {
        outline: none;
        border-color: var(--emerald-500);
        box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.1);
    }

    .clear-filters-btn {
        background: var(--gray-100);
        border: 2px solid var(--gray-200);
        border-radius: var(--radius-lg);
        padding: var(--space-4) var(--space-6);
        color: var(--gray-700);
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: var(--space-2);
        text-decoration: none;
    }

    .clear-filters-btn:hover {
        background: var(--gray-200);
        color: var(--gray-800);
        transform: translateY(-1px);
    }

    /* Doctors Grid */
    .doctors-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: var(--space-8);
        margin-bottom: var(--space-12);
    }

    /* Revolutionary Doctor Cards */
    .doctor-card {
        background: var(--gradient-surface);
        backdrop-filter: blur(20px);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        overflow: hidden;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: var(--shadow-lg);
        position: relative;
        animation: fadeInUp 0.6s ease-out;
    }

    .doctor-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--gradient-primary);
        transform: scaleX(0);
        transition: transform 0.4s ease;
    }

    .doctor-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: var(--shadow-emerald);
        border-color: var(--emerald-200);
    }

    .doctor-card:hover::before {
        transform: scaleX(1);
    }

    .doctor-card.featured {
        border: 2px solid var(--emerald-300);
        box-shadow: var(--shadow-verified);
    }

    .doctor-card.featured::before {
        background: var(--gradient-verified);
        transform: scaleX(1);
    }

    /* Doctor Header */
    .doctor-header {
        padding: var(--space-8);
        display: flex;
        align-items: flex-start;
        gap: var(--space-5);
        position: relative;
    }

    .doctor-avatar {
        position: relative;
        flex-shrink: 0;
    }

    .avatar-image {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: var(--gradient-primary);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: var(--text-2xl);
        font-weight: 700;
        box-shadow: var(--shadow-md);
        position: relative;
        overflow: hidden;
        border: 3px solid white;
    }

    .avatar-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
    }

    .verified-ring {
        position: absolute;
        top: -3px;
        left: -3px;
        right: -3px;
        bottom: -3px;
        border: 3px solid var(--status-verified);
        border-radius: 50%;
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.5; }
        100% { opacity: 1; }
    }

    .online-indicator {
        position: absolute;
        bottom: 3px;
        right: 3px;
        width: 18px;
        height: 18px;
        background: var(--status-verified);
        border: 3px solid white;
        border-radius: 50%;
        box-shadow: var(--shadow-sm);
    }

    .doctor-info {
        flex: 1;
        min-width: 0;
    }

    .doctor-name {
        font-size: var(--text-xl);
        font-weight: 800;
        color: var(--gray-900);
        margin-bottom: var(--space-2);
        display: flex;
        align-items: center;
        gap: var(--space-2);
        flex-wrap: wrap;
    }

    .doctor-name a {
        color: inherit;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .doctor-name a:hover {
        color: var(--emerald-600);
    }

    .verification-badge {
        display: inline-flex;
        align-items: center;
        gap: var(--space-1);
        padding: var(--space-1) var(--space-3);
        border-radius: var(--radius-full);
        font-size: var(--text-xs);
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .verification-badge.verified {
        background: var(--emerald-100);
        color: var(--emerald-800);
        border: 1px solid var(--emerald-200);
    }

    .verification-badge.pending {
        background: #fef3c7;
        color: #d97706;
        border: 1px solid #fcd34d;
    }

    .verification-badge.unverified {
        background: var(--gray-100);
        color: var(--gray-600);
        border: 1px solid var(--gray-200);
    }

    .doctor-specialization {
        font-size: var(--text-lg);
        font-weight: 700;
        color: var(--emerald-600);
        margin-bottom: var(--space-3);
    }

    .doctor-rating {
        display: flex;
        align-items: center;
        gap: var(--space-2);
        margin-bottom: var(--space-2);
    }

    .stars {
        display: flex;
        gap: var(--space-1);
        color: #fbbf24;
    }

    .rating-text {
        font-size: var(--text-sm);
        color: var(--gray-600);
        font-weight: 600;
    }

    .doctor-meta {
        display: flex;
        align-items: center;
        gap: var(--space-4);
        font-size: var(--text-sm);
        color: var(--gray-600);
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: var(--space-1);
    }

    /* Doctor Details */
    .doctor-details {
        padding: 0 var(--space-8) var(--space-6);
    }

    .details-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: var(--space-4);
        margin-bottom: var(--space-6);
    }

    .detail-item {
        display: flex;
        flex-direction: column;
        gap: var(--space-1);
    }

    .detail-label {
        font-size: var(--text-xs);
        color: var(--gray-500);
        text-transform: uppercase;
        font-weight: 600;
        letter-spacing: 0.05em;
    }

    .detail-value {
        font-size: var(--text-base);
        font-weight: 700;
        color: var(--gray-900);
    }

    /* Specializations */
    .specializations {
        margin-bottom: var(--space-6);
    }

    .specializations-title {
        font-size: var(--text-sm);
        color: var(--gray-500);
        margin-bottom: var(--space-2);
        font-weight: 600;
    }

    .specializations-list {
        display: flex;
        flex-wrap: wrap;
        gap: var(--space-2);
    }

    .specialization-tag {
        background: var(--emerald-50);
        color: var(--emerald-700);
        border: 1px solid var(--emerald-200);
        border-radius: var(--radius-full);
        padding: var(--space-1) var(--space-3);
        font-size: var(--text-xs);
        font-weight: 600;
        transition: all 0.2s ease;
    }

    .specialization-tag:hover {
        background: var(--emerald-100);
        transform: translateY(-1px);
    }

    .more-specializations {
        background: var(--gray-100);
        color: var(--gray-600);
        border: 1px solid var(--gray-200);
    }

    /* Hospital Affiliations */
    .affiliations {
        margin-bottom: var(--space-6);
    }

    .affiliations-title {
        font-size: var(--text-sm);
        color: var(--gray-500);
        margin-bottom: var(--space-2);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: var(--space-2);
    }

    .affiliations-text {
        font-size: var(--text-sm);
        color: var(--gray-700);
        line-height: 1.5;
    }

    /* Consultation Info */
    .consultation-info {
        background: var(--gray-50);
        border-radius: var(--radius-lg);
        padding: var(--space-4);
        margin-bottom: var(--space-6);
    }

    .consultation-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: var(--space-4);
    }

    .consultation-fee {
        display: flex;
        flex-direction: column;
        gap: var(--space-1);
    }

    .fee-label {
        font-size: var(--text-xs);
        color: var(--gray-500);
        text-transform: uppercase;
        font-weight: 600;
    }

    .fee-amount {
        font-size: var(--text-xl);
        font-weight: 900;
        color: var(--emerald-600);
    }

    .consultation-modes {
        display: flex;
        flex-direction: column;
        gap: var(--space-2);
    }

    .modes-list {
        display: flex;
        flex-wrap: wrap;
        gap: var(--space-1);
    }

    .mode-tag {
        background: var(--medical-blue-100);
        color: var(--medical-blue-800);
        border: 1px solid var(--medical-blue-200);
        border-radius: var(--radius-md);
        padding: var(--space-1) var(--space-2);
        font-size: var(--text-xs);
        font-weight: 600;
        text-transform: capitalize;
    }

    /* Languages */
    .languages {
        margin-bottom: var(--space-6);
    }

    .languages-title {
        font-size: var(--text-sm);
        color: var(--gray-500);
        margin-bottom: var(--space-2);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: var(--space-2);
    }

    .languages-list {
        display: flex;
        flex-wrap: wrap;
        gap: var(--space-2);
    }

    .language-tag {
        background: white;
        color: var(--gray-700);
        border: 1px solid var(--gray-300);
        border-radius: var(--radius-md);
        padding: var(--space-1) var(--space-2);
        font-size: var(--text-xs);
        font-weight: 500;
    }

    /* Action Buttons */
    .doctor-actions {
        padding: var(--space-6) var(--space-8);
        background: var(--gray-50);
        border-top: 1px solid var(--gray-100);
        display: flex;
        gap: var(--space-3);
    }

    .action-btn {
        flex: 1;
        padding: var(--space-4) var(--space-6);
        border-radius: var(--radius-xl);
        font-weight: 700;
        font-size: var(--text-base);
        text-decoration: none;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: var(--space-2);
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        cursor: pointer;
        border: none;
    }

    .action-btn.primary {
        background: var(--gradient-primary);
        color: white;
        box-shadow: var(--shadow-md);
    }

    .action-btn.primary:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-emerald);
        color: white;
    }

    .action-btn.secondary {
        background: white;
        color: var(--emerald-600);
        border: 2px solid var(--emerald-200);
        box-shadow: var(--shadow-sm);
    }

    .action-btn.secondary:hover {
        background: var(--emerald-50);
        border-color: var(--emerald-300);
        transform: translateY(-2px);
        color: var(--emerald-700);
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: var(--space-20) var(--space-8);
        background: var(--gradient-surface);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        box-shadow: var(--shadow-lg);
    }

    .empty-icon {
        font-size: 4rem;
        color: var(--emerald-500);
        margin-bottom: var(--space-6);
        opacity: 0.8;
    }

    .empty-title {
        font-size: var(--text-2xl);
        font-weight: 800;
        color: var(--gray-900);
        margin-bottom: var(--space-4);
    }

    .empty-description {
        font-size: var(--text-lg);
        color: var(--gray-600);
        margin-bottom: var(--space-8);
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    /* Pagination */
    .pagination-section {
        display: flex;
        justify-content: center;
        margin-top: var(--space-12);
    }

    .pagination {
        display: flex;
        align-items: center;
        gap: var(--space-2);
        background: var(--gradient-surface);
        border: 1px solid var(--gray-200);
        border-radius: var(--radius-2xl);
        padding: var(--space-4);
        box-shadow: var(--shadow-lg);
    }

    .pagination-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 44px;
        height: 44px;
        border-radius: var(--radius-lg);
        font-weight: 600;
        text-decoration: none;
        transition: all 0.2s ease;
        border: none;
        cursor: pointer;
    }

    .pagination-btn:hover {
        transform: translateY(-2px);
    }

    .pagination-btn.active {
        background: var(--gradient-primary);
        color: white;
        box-shadow: var(--shadow-md);
    }

    .pagination-btn:not(.active) {
        background: white;
        color: var(--gray-700);
        border: 1px solid var(--gray-200);
    }

    .pagination-btn:not(.active):hover {
        background: var(--gray-50);
        border-color: var(--gray-300);
    }

    .pagination-nav {
        background: var(--emerald-100);
        color: var(--emerald-700);
        border: 1px solid var(--emerald-200);
        padding: 0 var(--space-4);
        width: auto;
        min-width: 100px;
        font-size: var(--text-sm);
    }

    .pagination-nav:hover {
        background: var(--emerald-200);
        color: var(--emerald-800);
    }

    .pagination-nav:disabled {
        background: var(--gray-100);
        color: var(--gray-400);
        cursor: not-allowed;
    }

    .pagination-dots {
        color: var(--gray-400);
        pointer-events: none;
    }

    /* Animations */
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes slideInRight {
        from {
            opacity: 0;
            transform: translateX(30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    /* Responsive Design */
    @media (max-width: 1200px) {
        .doctors-grid {
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        }
    }

    @media (max-width: 768px) {
        .doctors-container {
            padding: 0 var(--space-4);
        }

        .hero-stats {
            flex-direction: column;
            gap: var(--space-4);
        }

        .search-primary {
            grid-template-columns: 1fr;
        }

        .filters-grid {
            grid-template-columns: 1fr;
        }

        .doctors-grid {
            grid-template-columns: 1fr;
        }

        .doctor-header {
            flex-direction: column;
            text-align: center;
        }

        .details-grid {
            grid-template-columns: 1fr;
        }

        .consultation-grid {
            grid-template-columns: 1fr;
        }

        .doctor-actions {
            flex-direction: column;
        }
    }

    @media (max-width: 640px) {
        .hero-title {
            font-size: 2rem;
        }

        .doctor-card {
            margin: 0 calc(var(--space-4) * -1);
            border-radius: 0;
            border-left: none;
            border-right: none;
        }

        .doctor-header,
        .doctor-details,
        .doctor-actions {
            padding-left: var(--space-4);
            padding-right: var(--space-4);
        }
    }
</style>

<!-- Revolutionary Hero Section -->
<section class="doctors-hero">
    <div class="doctors-container">
        <div class="hero-content">
            <div class="hero-badge">
                <i class="fas fa-user-md"></i>
                <span>Trusted Healthcare Professionals</span>
            </div>
            
            <h1 class="hero-title">
                Find Your Perfect Doctor
            </h1>
            
            <p class="hero-subtitle">
                Connect with verified medical professionals, specialists, and healthcare experts. 
                Book consultations, get expert advice, and receive world-class medical care from anywhere.
            </p>
            
            <div class="hero-stats">
                <div class="stat-item">
                    <span class="stat-number" data-count="<%= pagination.totalDoctors %>"><%= pagination.totalDoctors %>+</span>
                    <span class="stat-label">Verified Doctors</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number" data-count="50">50+</span>
                    <span class="stat-label">Specializations</span>
                </div>
                <div class="stat-item">
                    <span class="stat-number" data-count="100000">100K+</span>
                    <span class="stat-label">Happy Patients</span>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="doctors-container">
    <!-- Revolutionary Search Section -->
    <div class="search-section">
        <div class="search-header">
            <h2 class="search-title">
                <i class="fas fa-search"></i>
                Find Healthcare Professionals
            </h2>
            <div class="doctors-count">
                <span class="count-primary"><%= pagination.totalDoctors %></span>
                <span class="count-secondary">Doctors Available</span>
            </div>
        </div>
        
        <form method="GET" action="/doctors" class="search-form" id="searchForm">
            <div class="search-primary">
                <div class="search-input-group">
                    <input
                        type="text"
                        name="search"
                        value="<%= filters.search %>"
                        class="search-input"
                        placeholder="Search by name, specialization, or hospital..."
                        autocomplete="off"
                    />
                    <i class="fas fa-search search-icon"></i>
                </div>
                <button type="submit" class="search-btn">
                    <i class="fas fa-search"></i>
                    <span>Search</span>
                </button>
            </div>
            
            <div class="filters-grid">
                <div class="filter-group">
                    <label class="filter-label">
                        <i class="fas fa-stethoscope"></i> Specialization
                    </label>
                    <select name="specialization" class="filter-select">
                        <option value="">All Specializations</option>
                        <% specializations.forEach(function(spec) { %>
                            <option value="<%= spec %>" <%= filters.specialization === spec ? 'selected' : '' %>>
                                <%= spec %>
                            </option>
                        <% }); %>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label class="filter-label">
                        <i class="fas fa-calendar-alt"></i> Experience
                    </label>
                    <select name="experience" class="filter-select">
                        <option value="">Any Experience</option>
                        <option value="5" <%= filters.experience === '5' ? 'selected' : '' %>>5+ years</option>
                        <option value="10" <%= filters.experience === '10' ? 'selected' : '' %>>10+ years</option>
                        <option value="15" <%= filters.experience === '15' ? 'selected' : '' %>>15+ years</option>
                        <option value="20" <%= filters.experience === '20' ? 'selected' : '' %>>20+ years</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label class="filter-label">
                        <i class="fas fa-star"></i> Rating
                    </label>
                    <select name="rating" class="filter-select">
                        <option value="">Any Rating</option>
                        <option value="4.0" <%= filters.rating === '4.0' ? 'selected' : '' %>>4.0+ stars</option>
                        <option value="4.5" <%= filters.rating === '4.5' ? 'selected' : '' %>>4.5+ stars</option>
                        <option value="4.8" <%= filters.rating === '4.8' ? 'selected' : '' %>>4.8+ stars</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label class="filter-label">
                        <i class="fas fa-video"></i> Consultation Mode
                    </label>
                    <select name="consultationMode" class="filter-select">
                        <option value="">All Modes</option>
                        <option value="online" <%= filters.consultationMode === 'online' ? 'selected' : '' %>>Online</option>
                        <option value="offline" <%= filters.consultationMode === 'offline' ? 'selected' : '' %>>Offline</option>
                        <option value="home_visit" <%= filters.consultationMode === 'home_visit' ? 'selected' : '' %>>Home Visit</option>
                    </select>
                </div>
                
                <div class="filter-group">
                    <label class="filter-label">
                        <i class="fas fa-check-circle"></i> Verification Status
                    </label>
                    <select name="verificationStatus" class="filter-select">
                        <option value="">All Status</option>
                        <option value="verified" <%= filters.verificationStatus === 'verified' ? 'selected' : '' %>>Verified Only</option>
                        <option value="pending" <%= filters.verificationStatus === 'pending' ? 'selected' : '' %>>Pending</option>
                    </select>
                </div>
                
                <div class="filter-group" style="display: flex; align-items: end;">
                    <a href="/doctors" class="clear-filters-btn">
                        <i class="fas fa-times"></i>
                        <span>Clear Filters</span>
                    </a>
                </div>
            </div>
        </form>
    </div>

    <!-- Doctors Grid -->
    <div class="doctors-grid" id="doctorsGrid">
        <% if (doctors && doctors.length > 0) { %>
            <% doctors.forEach((doctor, index) => { %>
            <article class="doctor-card <%= doctor.licenseVerificationStatus === 'verified' ? 'featured' : '' %>" style="animation-delay: <%= index * 0.1 %>s;">
                <!-- Doctor Header -->
                <div class="doctor-header">
                    <div class="doctor-avatar">
                        <div class="avatar-image">
                            <% if (doctor.user && doctor.user.profileImage) { %>
                                <img src="<%= doctor.user.profileImage %>" alt="<%= doctor.fullName %>" />
                            <% } else { %>
                                <%= doctor.fullName ? doctor.fullName.charAt(0).toUpperCase() : '👨‍⚕️' %>
                            <% } %>
                        </div>
                        <% if (doctor.licenseVerificationStatus === 'verified') { %>
                            <div class="verified-ring"></div>
                        <% } %>
                        <% if (Math.random() > 0.5) { %>
                            <div class="online-indicator"></div>
                        <% } %>
                    </div>
                    
                    <div class="doctor-info">
                        <h3 class="doctor-name">
                            <a href="/doctors/profile/<%= doctor._id %>">
                                Dr. <%= doctor.fullName %>
                            </a>
                            <% if (doctor.licenseVerificationStatus === 'verified') { %>
                                <span class="verification-badge verified">
                                    <i class="fas fa-check-circle"></i>
                                    Verified
                                </span>
                            <% } else if (doctor.licenseVerificationStatus === 'pending') { %>
                                <span class="verification-badge pending">
                                    <i class="fas fa-clock"></i>
                                    Pending
                                </span>
                            <% } else { %>
                                <span class="verification-badge unverified">
                                    <i class="fas fa-question-circle"></i>
                                    Unverified
                                </span>
                            <% } %>
                        </h3>
                        
                        <div class="doctor-specialization">
                            <%= doctor.specialization %>
                        </div>
                        
                        <div class="doctor-rating">
                            <div class="stars">
                                <% for (let i = 0; i < 5; i++) { %>
                                    <% if (i < Math.floor(doctor.averageRating)) { %>
                                        <i class="fas fa-star"></i>
                                    <% } else if (i === Math.floor(doctor.averageRating) && doctor.averageRating % 1 > 0) { %>
                                        <i class="fas fa-star-half-alt"></i>
                                    <% } else { %>
                                        <i class="far fa-star"></i>
                                    <% } %>
                                <% } %>
                            </div>
                            <span class="rating-text">
                                <%= doctor.averageRating %> (125+ reviews)
                            </span>
                        </div>
                        
                        <div class="doctor-meta">
                            <div class="meta-item">
                                <i class="fas fa-calendar-alt"></i>
                                <span><%= doctor.experienceYears %>+ years</span>
                            </div>
                            <div class="meta-item">
                                <i class="fas fa-users"></i>
                                <span><%= doctor.totalPatientsTreated.toLocaleString() %> patients</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Doctor Details -->
                <div class="doctor-details">
                    <div class="details-grid">
                        <div class="detail-item">
                            <span class="detail-label">Experience</span>
                            <span class="detail-value"><%= doctor.experienceYears %>+ Years</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">Patients Treated</span>
                            <span class="detail-value"><%= doctor.totalPatientsTreated.toLocaleString() %></span>
                        </div>
                    </div>

                    <!-- Sub-specializations -->
                    <% if (doctor.subSpecializations && doctor.subSpecializations.length > 0) { %>
                    <div class="specializations">
                        <div class="specializations-title">
                            <i class="fas fa-medal"></i> Expertise Areas
                        </div>
                        <div class="specializations-list">
                            <% doctor.subSpecializations.slice(0, 3).forEach(subSpec => { %>
                                <span class="specialization-tag"><%= subSpec %></span>
                            <% }) %>
                            <% if (doctor.subSpecializations.length > 3) { %>
                                <span class="specialization-tag more-specializations">
                                    +<%= doctor.subSpecializations.length - 3 %> more
                                </span>
                            <% } %>
                        </div>
                    </div>
                    <% } %>

                    <!-- Hospital Affiliations -->
                    <% if (doctor.hospitalAffiliations && doctor.hospitalAffiliations.length > 0) { %>
                    <div class="affiliations">
                        <div class="affiliations-title">
                            <i class="fas fa-hospital"></i> Hospital Affiliations
                        </div>
                        <div class="affiliations-text">
                            <%= doctor.hospitalAffiliations.slice(0, 2).join(', ') %>
                            <% if (doctor.hospitalAffiliations.length > 2) { %>
                                and <%= doctor.hospitalAffiliations.length - 2 %> more
                            <% } %>
                        </div>
                    </div>
                    <% } %>

                    <!-- Consultation Info -->
                    <div class="consultation-info">
                        <div class="consultation-grid">
                            <div class="consultation-fee">
                                <span class="fee-label">Consultation Fee</span>
                                <span class="fee-amount">$<%= doctor.consultationFee %></span>
                            </div>
                            <div class="consultation-modes">
                                <span class="fee-label">Available Modes</span>
                                <div class="modes-list">
                                    <% doctor.consultationMode.forEach(mode => { %>
                                        <span class="mode-tag"><%= mode.replace('_', ' ') %></span>
                                    <% }) %>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Languages -->
                    <% if (doctor.languages && doctor.languages.length > 0) { %>
                    <div class="languages">
                        <div class="languages-title">
                            <i class="fas fa-language"></i> Languages Spoken
                        </div>
                        <div class="languages-list">
                            <% doctor.languages.forEach(lang => { %>
                                <span class="language-tag"><%= lang %></span>
                            <% }) %>
                        </div>
                    </div>
                    <% } %>
                </div>

                <!-- Action Buttons -->
                <div class="doctor-actions">
                    <a href="/doctors/profile/<%= doctor._id %>" class="action-btn primary">
                        <i class="fas fa-eye"></i>
                        <span>View Profile</span>
                    </a>
                    <% if (user && !user.isDoctor) { %>
                        <button class="action-btn secondary" onclick="sendChatRequest('<%= doctor._id %>')">
                            <i class="fas fa-comments"></i>
                            <span>Request Chat</span>
                        </button>
                    <% } else { %>
                        <a href="/users/login" class="action-btn secondary">
                            <i class="fas fa-sign-in-alt"></i>
                            <span>Login to Chat</span>
                        </a>
                    <% } %>
                </div>
            </article>
            <% }) %>
        <% } else { %>
            <!-- Revolutionary Empty State -->
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-user-md"></i>
                </div>
                <h3 class="empty-title">No Doctors Found</h3>
                <p class="empty-description">
                    <% if (filters.search || filters.specialization || filters.experience || filters.rating || filters.consultationMode || filters.verificationStatus) { %>
                        No doctors match your search criteria. Try adjusting your filters to find more results.
                    <% } else { %>
                        We're working hard to bring you the best healthcare professionals. Check back soon!
                    <% } %>
                </p>
                <a href="/doctors" class="action-btn primary">
                    <i class="fas fa-refresh"></i>
                    <span>Clear All Filters</span>
                </a>
            </div>
        <% } %>
    </div>

    <!-- Revolutionary Pagination -->
    <% if (pagination.totalPages > 1) { %>
    <div class="pagination-section">
        <div class="pagination">
            <!-- Previous Page -->
            <% if (pagination.hasPrevPage) { %>
                <a 
                    class="pagination-btn pagination-nav" 
                    href="/doctors?page=<%= pagination.currentPage - 1 %>&<%= new URLSearchParams(filters).toString() %>"
                >
                    <i class="fas fa-chevron-left"></i> Previous
                </a>
            <% } else { %>
                <button class="pagination-btn pagination-nav" disabled>
                    <i class="fas fa-chevron-left"></i> Previous
                </button>
            <% } %>

            <!-- Page Numbers -->
            <% for (let i = 1; i <= pagination.totalPages; i++) { %>
                <% if (i === pagination.currentPage) { %>
                    <button class="pagination-btn active"><%= i %></button>
                <% } else if (i === 1 || i === pagination.totalPages || (i >= pagination.currentPage - 2 && i <= pagination.currentPage + 2)) { %>
                    <a 
                        class="pagination-btn" 
                        href="/doctors?page=<%= i %>&<%= new URLSearchParams(filters).toString() %>"
                    >
                        <%= i %>
                    </a>
                <% } else if (i === pagination.currentPage - 3 || i === pagination.currentPage + 3) { %>
                    <span class="pagination-btn pagination-dots">...</span>
                <% } %>
            <% } %>

            <!-- Next Page -->
            <% if (pagination.hasNextPage) { %>
                <a 
                    class="pagination-btn pagination-nav" 
                    href="/doctors?page=<%= pagination.currentPage + 1 %>&<%= new URLSearchParams(filters).toString() %>"
                >
                    Next <i class="fas fa-chevron-right"></i>
                </a>
            <% } else { %>
                <button class="pagination-btn pagination-nav" disabled>
                    Next <i class="fas fa-chevron-right"></i>
                </button>
            <% } %>
        </div>
    </div>
    <% } %>
</div>

<!-- Chat Request Modal -->
<div class="modal fade" id="chatRequestModal" tabindex="-1" aria-labelledby="chatRequestModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: var(--radius-2xl); border: none; box-shadow: var(--shadow-2xl);">
            <div class="modal-header" style="background: var(--gradient-primary); color: white; border-radius: var(--radius-2xl) var(--radius-2xl) 0 0;">
                <h5 class="modal-title" id="chatRequestModalLabel">
                    <i class="fas fa-comments me-2"></i>Request Consultation with Doctor
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="padding: var(--space-8);">
                <form id="chatRequestForm">
                    <div class="row g-4">
                        <div class="col-md-6">
                            <label for="consultationType" class="form-label" style="font-weight: 700; color: var(--gray-800);">Consultation Type *</label>
                            <select class="form-select" id="consultationType" name="consultationType" required style="border: 2px solid var(--gray-200); border-radius: var(--radius-lg); padding: var(--space-3);">
                                <option value="">Select type</option>
                                <option value="general">General Consultation</option>
                                <option value="xray_consultation">X-ray Consultation</option>
                                <option value="follow_up">Follow-up</option>
                                <option value="emergency">Emergency</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label for="urgency" class="form-label" style="font-weight: 700; color: var(--gray-800);">Urgency Level</label>
                            <select class="form-select" id="urgency" name="urgency" style="border: 2px solid var(--gray-200); border-radius: var(--radius-lg); padding: var(--space-3);">
                                <option value="low">Low</option>
                                <option value="medium" selected>Medium</option>
                                <option value="high">High</option>
                                <option value="emergency">Emergency</option>
                            </select>
                        </div>
                        <div class="col-12">
                            <label for="reason" class="form-label" style="font-weight: 700; color: var(--gray-800);">Reason for Consultation *</label>
                            <textarea class="form-control" id="reason" name="reason" rows="3" 
                                      placeholder="Please describe your symptoms or reason for consultation..." 
                                      required style="border: 2px solid var(--gray-200); border-radius: var(--radius-lg); padding: var(--space-3);"></textarea>
                        </div>
                        <div class="col-md-6">
                            <label for="symptoms" class="form-label" style="font-weight: 700; color: var(--gray-800);">Symptoms (comma separated)</label>
                            <input type="text" class="form-control" id="symptoms" name="symptoms" 
                                   placeholder="e.g., fever, cough, headache" style="border: 2px solid var(--gray-200); border-radius: var(--radius-lg); padding: var(--space-3);">
                        </div>
                        <div class="col-md-6">
                            <label for="currentMedications" class="form-label" style="font-weight: 700; color: var(--gray-800);">Current Medications</label>
                            <input type="text" class="form-control" id="currentMedications" name="currentMedications" 
                                   placeholder="e.g., aspirin, vitamin D" style="border: 2px solid var(--gray-200); border-radius: var(--radius-lg); padding: var(--space-3);">
                        </div>
                        <div class="col-12">
                            <label for="allergies" class="form-label" style="font-weight: 700; color: var(--gray-800);">Allergies</label>
                            <input type="text" class="form-control" id="allergies" name="allergies" 
                                   placeholder="e.g., penicillin, peanuts" style="border: 2px solid var(--gray-200); border-radius: var(--radius-lg); padding: var(--space-3);">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer" style="padding: var(--space-6) var(--space-8); border-top: 1px solid var(--gray-200);">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" style="border-radius: var(--radius-lg); padding: var(--space-3) var(--space-6);">Cancel</button>
                <button type="button" class="btn" onclick="submitChatRequest()" style="background: var(--gradient-primary); color: white; border: none; border-radius: var(--radius-lg); padding: var(--space-3) var(--space-6); font-weight: 700;">
                    <i class="fas fa-paper-plane me-2"></i>Send Request
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Revolutionary JavaScript -->
<script>
let currentDoctorId = null;

// Chat request functionality
function sendChatRequest(doctorId) {
    currentDoctorId = doctorId;
    const modal = new bootstrap.Modal(document.getElementById('chatRequestModal'));
    modal.show();
}

function submitChatRequest() {
    const form = document.getElementById('chatRequestForm');
    const formData = new FormData(form);
    
    // Convert FormData to JSON
    const data = {};
    formData.forEach((value, key) => {
        data[key] = value;
    });

    // Show loading state
    const submitBtn = document.querySelector('#chatRequestModal .btn[onclick="submitChatRequest()"]');
    const originalText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Sending...';
    submitBtn.disabled = true;

    fetch(`/doctors/profile/${currentDoctorId}/chat-request`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Show success message
            showAlert('success', data.message);
            
            // Close modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('chatRequestModal'));
            modal.hide();
            
            // Reset form
            form.reset();
            
            // Optionally redirect to user's chat requests
            setTimeout(() => {
                window.location.href = '/users/chat-requests';
            }, 1500);
            
        } else {
            showAlert('danger', data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showAlert('danger', 'Failed to send chat request. Please try again.');
    })
    .finally(() => {
        // Reset button state
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
    });
}

function showAlert(type, message) {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
    alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; border-radius: var(--radius-lg); box-shadow: var(--shadow-lg);';
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    document.body.appendChild(alertDiv);
    
    // Auto-remove after 5 seconds
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.parentNode.removeChild(alertDiv);
        }
    }, 5000);
}

// Auto-submit form on filter change
document.addEventListener('DOMContentLoaded', function() {
    const filterSelects = document.querySelectorAll('#searchForm select');
    filterSelects.forEach(select => {
        select.addEventListener('change', function() {
            document.getElementById('searchForm').submit();
        });
    });

    // Initialize animations
    initializeAnimations();
});

// Counter animation for hero stats
function animateCounters() {
    document.querySelectorAll('[data-count]').forEach(counter => {
        const target = parseInt(counter.dataset.count);
        const duration = 2000;
        const step = target / (duration / 16);
        let current = 0;
        
        const timer = setInterval(() => {
            current += step;
            if (current >= target) {
                current = target;
                clearInterval(timer);
            }
            counter.textContent = Math.floor(current).toLocaleString() + '+';
        }, 16);
    });
}

// Initialize smooth animations
function initializeAnimations() {
    // Counter animation
    setTimeout(animateCounters, 500);

    // Intersection Observer for card animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    // Observe all doctor cards
    document.querySelectorAll('.doctor-card').forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px)';
        card.style.transition = `all 0.6s cubic-bezier(0.4, 0, 0.2, 1) ${index * 0.1}s`;
        observer.observe(card);
    });

    // Parallax effect for hero
    let ticking = false;
    
    function updateScrollEffects() {
        const scrolled = window.pageYOffset;
        const rate = scrolled * -0.3;
        
        const hero = document.querySelector('.doctors-hero');
        if (hero) {
            hero.style.transform = `translateY(${rate}px)`;
        }
        
        ticking = false;
    }

    window.addEventListener('scroll', function() {
        if (!ticking) {
            requestAnimationFrame(updateScrollEffects);
            ticking = true;
        }
    });
}

// Keyboard shortcuts
document.addEventListener('keydown', function(e) {
    // Ctrl/Cmd + K to focus search
    if ((e.ctrlKey || e.metaKey) && e.key === 'k') {
        e.preventDefault();
        document.querySelector('.search-input').focus();
    }
});

// Enhanced search with live feedback
const searchInput = document.querySelector('.search-input');
let searchTimeout;

searchInput.addEventListener('input', function() {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
        // Add visual feedback for search
        const icon = document.querySelector('.search-icon');
        icon.style.color = this.value ? 'var(--emerald-500)' : 'var(--gray-400)';
    }, 300);
});
</script>

<%- include('../partials/footer') %>
